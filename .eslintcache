[{"F:\\skripsi-auto-assess\\frontend-web\\src\\index.js":"1","F:\\skripsi-auto-assess\\frontend-web\\src\\reportWebVitals.js":"2","F:\\skripsi-auto-assess\\frontend-web\\src\\App.js":"3","F:\\skripsi-auto-assess\\frontend-web\\src\\routes\\index.js":"4","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\profile\\index.js":"5","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\PrivateRoute\\index.js":"6","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\PrivateRoute\\PrivateRoute.js":"7","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\privateRoute\\index.js":"8","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\privateRoute\\PrivateRoute.js":"9","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\index.js":"10","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\index.js":"11","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\Content.js":"12","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\Topbar.js":"13","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\SubMenu.js":"14","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\SideBar.js":"15","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\profile\\Profile.js":"16","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\login\\index.js":"17","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\login\\Login.js":"18","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dashboard\\index.js":"19","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dashboard\\Dashboard.js":"20","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\datatable\\index.js":"21","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\datatable\\DataTable.js":"22","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dynamictable\\index.js":"23","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dynamictable\\DynamicTable.js":"24","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\home\\index.js":"25","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\index.js":"26","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\index.js":"27","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalcreate\\index.js":"28","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaket\\index.js":"29","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\jadwal\\index.js":"30","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\index.js":"31","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\index.js":"32","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soaldetail\\index.js":"33","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\index.js":"34","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\home\\Home.js":"35","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\Kelas.js":"36","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\jadwal\\Jadwal.js":"37","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaket\\SoalPaket.js":"38","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalcreate\\SoalCreate.js":"39","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soaldetail\\SoalDetail.js":"40","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\StudiKasus.js":"41","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\SoalPaketDetail.js":"42","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\JadwalSesi.js":"43","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\TabelSesi.js":"44","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\NilaiMhs.js":"45","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\nilai\\index.js":"46","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\nilai\\Nilai.js":"47","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\index.js":"48","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\SoalSesi.js":"49","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\TabelSoal.js":"50","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\Clock.js":"51","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\index.js":"52","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\SoalShow.js":"53","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\ButtonSubmit.js":"54","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\ButtonTest.js":"55","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\TableSample.js":"56","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\TableSampleItem.js":"57","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\buttonkembali\\ButtonKembali.js":"58","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\buttonkembali\\index.js":"59","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\TabelSample.js":"60","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\index.js":"61","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\mhskelas\\index.js":"62","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\mhskelas\\MhsKelas.js":"63","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\tabledata\\index.js":"64","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\tabledata\\TableData.js":"65","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\index.js":"66","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\NilaiDetail.js":"67","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\CollapseQuestion.js":"68","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\CollapseQuestionItem.js":"69","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\reacttable\\ReactTable.js":"70","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\reacttable\\makeData.js":"71","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\soalpaketdetailadd\\index.js":"72","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\soalpaketdetailadd\\SoalPaketDetailAdd.js":"73","F:\\skripsi-auto-assess\\frontend-web\\src\\config\\index.js":"74","F:\\skripsi-auto-assess\\frontend-web\\src\\lib\\capitalizeWord.js":"75","F:\\skripsi-auto-assess\\frontend-web\\src\\lib\\getFormattedDate.js":"76","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\spinner\\index.js":"77","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\spinner\\Spinner.js":"78","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\countdown\\Countdown.js":"79","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\SoalSesiTest.js":"80","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\SoalShowTest.js":"81"},{"size":819,"mtime":1620028684549,"results":"82","hashOfConfig":"83"},{"size":375,"mtime":1612326497322,"results":"84","hashOfConfig":"83"},{"size":1558,"mtime":1621855923657,"results":"85","hashOfConfig":"83"},{"size":3503,"mtime":1620301647086,"results":"86","hashOfConfig":"83"},{"size":38,"mtime":1612750826091,"results":"87","hashOfConfig":"83"},{"size":43,"mtime":1612691043601,"results":"88","hashOfConfig":"89"},{"size":557,"mtime":1612691015385,"results":"90","hashOfConfig":"89"},{"size":43,"mtime":1612691043601,"results":"91","hashOfConfig":"83"},{"size":564,"mtime":1619469488600,"results":"92","hashOfConfig":"83"},{"size":38,"mtime":1612692138618,"results":"93","hashOfConfig":"83"},{"size":38,"mtime":1612692132157,"results":"94","hashOfConfig":"83"},{"size":1018,"mtime":1619479259994,"results":"95","hashOfConfig":"83"},{"size":2124,"mtime":1619475172996,"results":"96","hashOfConfig":"83"},{"size":1364,"mtime":1612691594828,"results":"97","hashOfConfig":"83"},{"size":5691,"mtime":1614839525176,"results":"98","hashOfConfig":"83"},{"size":1741,"mtime":1619478019193,"results":"99","hashOfConfig":"83"},{"size":36,"mtime":1612750759510,"results":"100","hashOfConfig":"83"},{"size":6216,"mtime":1621833348264,"results":"101","hashOfConfig":"83"},{"size":40,"mtime":1612752291043,"results":"102","hashOfConfig":"83"},{"size":548,"mtime":1612752270595,"results":"103","hashOfConfig":"83"},{"size":40,"mtime":1613968128114,"results":"104","hashOfConfig":"83"},{"size":371,"mtime":1622090592101,"results":"105","hashOfConfig":"83"},{"size":43,"mtime":1613970701644,"results":"106","hashOfConfig":"83"},{"size":1444,"mtime":1620275556695,"results":"107","hashOfConfig":"83"},{"size":35,"mtime":1612750783345,"results":"108","hashOfConfig":"83"},{"size":41,"mtime":1613963078374,"results":"109","hashOfConfig":"83"},{"size":36,"mtime":1613972138389,"results":"110","hashOfConfig":"83"},{"size":41,"mtime":1614571870128,"results":"111","hashOfConfig":"83"},{"size":40,"mtime":1614574184439,"results":"112","hashOfConfig":"83"},{"size":37,"mtime":1614574294866,"results":"113","hashOfConfig":"83"},{"size":46,"mtime":1614582645302,"results":"114","hashOfConfig":"83"},{"size":39,"mtime":1614839056411,"results":"115","hashOfConfig":"83"},{"size":41,"mtime":1614581103679,"results":"116","hashOfConfig":"83"},{"size":41,"mtime":1612758559379,"results":"117","hashOfConfig":"83"},{"size":767,"mtime":1614839815267,"results":"118","hashOfConfig":"83"},{"size":8527,"mtime":1621095158647,"results":"119","hashOfConfig":"83"},{"size":14885,"mtime":1620305567818,"results":"120","hashOfConfig":"83"},{"size":5054,"mtime":1620295030681,"results":"121","hashOfConfig":"83"},{"size":11193,"mtime":1620287771211,"results":"122","hashOfConfig":"83"},{"size":2702,"mtime":1620294132218,"results":"123","hashOfConfig":"83"},{"size":5478,"mtime":1620286357190,"results":"124","hashOfConfig":"83"},{"size":7627,"mtime":1621089813143,"results":"125","hashOfConfig":"83"},{"size":5080,"mtime":1621830754558,"results":"126","hashOfConfig":"83"},{"size":371,"mtime":1613373623601,"results":"127","hashOfConfig":"83"},{"size":5834,"mtime":1620302042343,"results":"128","hashOfConfig":"83"},{"size":36,"mtime":1614574909098,"results":"129","hashOfConfig":"83"},{"size":4752,"mtime":1620031243672,"results":"130","hashOfConfig":"83"},{"size":39,"mtime":1613364293002,"results":"131","hashOfConfig":"83"},{"size":5295,"mtime":1622090940877,"results":"132","hashOfConfig":"83"},{"size":373,"mtime":1622090811580,"results":"133","hashOfConfig":"83"},{"size":550,"mtime":1613376050300,"results":"134","hashOfConfig":"83"},{"size":39,"mtime":1613365175445,"results":"135","hashOfConfig":"83"},{"size":5281,"mtime":1622091012865,"results":"136","hashOfConfig":"83"},{"size":213,"mtime":1613370011179,"results":"137","hashOfConfig":"83"},{"size":213,"mtime":1613372987894,"results":"138","hashOfConfig":"83"},{"size":619,"mtime":1619763302461,"results":"139","hashOfConfig":"83"},{"size":1230,"mtime":1619763464137,"results":"140","hashOfConfig":"83"},{"size":461,"mtime":1613374275783,"results":"141","hashOfConfig":"83"},{"size":44,"mtime":1613374284789,"results":"142","hashOfConfig":"83"},{"size":4851,"mtime":1620276136267,"results":"143","hashOfConfig":"83"},{"size":42,"mtime":1616295939679,"results":"144","hashOfConfig":"83"},{"size":39,"mtime":1613974565690,"results":"145","hashOfConfig":"83"},{"size":7757,"mtime":1621093480754,"results":"146","hashOfConfig":"83"},{"size":40,"mtime":1613970601846,"results":"147","hashOfConfig":"83"},{"size":1601,"mtime":1620275486118,"results":"148","hashOfConfig":"83"},{"size":42,"mtime":1616313268331,"results":"149","hashOfConfig":"83"},{"size":2733,"mtime":1620305380212,"results":"150","hashOfConfig":"83"},{"size":628,"mtime":1620304015925,"results":"151","hashOfConfig":"83"},{"size":2294,"mtime":1620305168641,"results":"152","hashOfConfig":"83"},{"size":4529,"mtime":1618371710415,"results":"153","hashOfConfig":"83"},{"size":1080,"mtime":1618368608281,"results":"154","hashOfConfig":"83"},{"size":49,"mtime":1618373143777,"results":"155","hashOfConfig":"83"},{"size":6678,"mtime":1621089400619,"results":"156","hashOfConfig":"83"},{"size":263,"mtime":1622097686496,"results":"157","hashOfConfig":"83"},{"size":112,"mtime":1619479781635,"results":"158","hashOfConfig":"83"},{"size":265,"mtime":1620027241662,"results":"159","hashOfConfig":"83"},{"size":38,"mtime":1619755860765,"results":"160","hashOfConfig":"83"},{"size":320,"mtime":1620294613819,"results":"161","hashOfConfig":"83"},{"size":1923,"mtime":1619767339376,"results":"162","hashOfConfig":"83"},{"size":6127,"mtime":1622091615328,"results":"163","hashOfConfig":"83"},{"size":5598,"mtime":1622091019236,"results":"164","hashOfConfig":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},"rkrzvj",{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"167"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"1s6ws9f",{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"167"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"167"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"167"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"167"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"167"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"167"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"167"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"167"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"167"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"167"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"167"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"167"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"167"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"167"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"167"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"167"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"167"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"167"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"167"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"167"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"167"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"167"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"167"},"F:\\skripsi-auto-assess\\frontend-web\\src\\index.js",[],["357","358"],"F:\\skripsi-auto-assess\\frontend-web\\src\\reportWebVitals.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\App.js",["359"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\nimport PrivateRoute from \"./components/privateRoute\";\r\nimport Login from \"./pages/login\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport SoalSesiTest from \"./pages/mahasiswa/soalsesi/SoalSesiTest\";\r\nimport SoalShowTest from \"./pages/mahasiswa/soalshow/SoalShowTest\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction App() {\r\n    const [token, setToken] = useState(localStorage.getItem(\"authToken\") || \"\");\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || \"\")\r\n\r\n    const logout = () => {\r\n        setToken(\"\")\r\n        localStorage.removeItem(\"authToken\");\r\n\r\n        setUser(\"\")\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    const isLoggedIn = () => token !== \"\"\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isLoggedIn, token, setToken, user, setUser, logout }}>\r\n            <Router>\r\n                <div className=\"App wrapper\">\r\n                    <Switch>\r\n                        <Route path=\"/login\" exact component={Login} />\r\n                        <Route path=\"/test\" exact component={SoalSesiTest} />\r\n                        <Route path=\"/soaltest/:id\" exact component={SoalShowTest} />\r\n                        <PrivateRoute path=\"/\" component={Dashboard} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\routes\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\profile\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\PrivateRoute\\index.js",[],["360","361"],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\privateRoute\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\privateRoute\\PrivateRoute.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\Content.js",["362"],"import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"../privateRoute\";\r\n\r\nimport Topbar from \"./Topbar\";\r\nimport routes from \"../../routes\";\r\n\r\nconst Content = ({ sidebarIsOpen, toggleSidebar }) => {\r\n    function renderRoutes() {\r\n        return routes.map((route, index) => (\r\n            <PrivateRoute\r\n                path={route.path}\r\n                component={route.component}\r\n                key={index}\r\n                exact\r\n            />\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            fluid\r\n            className={classNames(\"content\", { \"is-open\": sidebarIsOpen })}\r\n        >\r\n            <Topbar toggleSidebar={toggleSidebar} />\r\n            <Switch>\r\n                {/* <Route exact path=\"/\" component={() => \"Hello\"} /> */}\r\n                {renderRoutes()}\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\content\\Topbar.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\SubMenu.js",[],["363","364"],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\sidebar\\SideBar.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\profile\\Profile.js",["365"],"import React, { useContext } from \"react\";\r\nimport { Container, Table } from \"reactstrap\";\r\nimport { AuthContext } from \"../../App\";\r\n\r\nfunction Profile() {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"text-muted\">Personal Information</h4>\r\n            <hr />\r\n            <div className=\"mt-4\">\r\n                <Table borderless>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <h6 className=\"m-0\">Nama</h6>\r\n                            </td>\r\n                            <td>\r\n                                <p className=\"m-0\">: {authContext.user.name}</p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h6 className=\"m-0\">Username</h6>\r\n                            </td>\r\n                            <td>\r\n                                <p className=\"m-0\">\r\n                                    : {authContext.user.username}\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h6 className=\"m-0\">NIM</h6>\r\n                            </td>\r\n                            <td>\r\n                                <p className=\"m-0\">: {authContext.user.role == \"dosen\" ? authContext.user.no_induk : authContext.user.nim}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\login\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\login\\Login.js",["366"],"import React, { useContext, useState } from \"react\";\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { AuthContext } from \"../../App\";\r\nimport axios from \"axios\";\r\nimport { ENDPOINT_BACKEND } from \"../../config\";\r\n\r\nconst INITIAL_STATE = {\r\n    username: \"\",\r\n    password: \"\",\r\n};\r\n\r\nfunction Login(props) {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const [loginForm, setLoginForm] = useState(INITIAL_STATE);\r\n\r\n    const [isSuccess, setIsSuccess] = useState(true)\r\n    const [errMessage, setErrMessage] = useState(\"\")\r\n\r\n    const [loginAs, setLoginAs] = useState(\"dosen\")\r\n\r\n    const redirectIfAuthenticated = (isLoggedIn) => {\r\n        if (isLoggedIn) {\r\n            (authContext.user.role === \"dosen\") ? props.history.push('/jadwal') : props.history.push('/jadwalsesi')\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const endpoint = (loginAs == \"dosen\") ? \"users\" : \"students\"\r\n        axios.post(`${ENDPOINT_BACKEND}/${endpoint}/login`, {\r\n            ...loginForm\r\n        }).then(res => {\r\n            if (!res.data.success) {\r\n                setIsSuccess(res.data.success)\r\n                setErrMessage(res.data.message)\r\n            } else {\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data.data.user))\r\n                localStorage.setItem(\"authToken\", res.data.data.token)\r\n\r\n                authContext.setUser(res.data.data.user)\r\n                authContext.setToken(res.data.data.token)\r\n\r\n                window.location.reload();\r\n                // if (res.data.data.user.role == \"dosen\") {\r\n                //     props.history.push('/jadwal')\r\n                // } else {\r\n                //     props.history.push('/jadwalsesi')\r\n                // }\r\n            }\r\n\r\n        })\r\n\r\n        setLoginForm(INITIAL_STATE);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                redirectIfAuthenticated(authContext.isLoggedIn())\r\n            }\r\n            <div className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n                <Card className=\"w-50\">\r\n                    <CardBody>\r\n                        <div className=\"my-3\">\r\n                            <h1 className=\"text-center mb-3\">\r\n                                <FontAwesomeIcon\r\n                                    icon={faLock}\r\n                                    className=\"mr-2\"\r\n                                    color=\"#244282\"\r\n                                />\r\n                            </h1>\r\n\r\n                            <h6 className=\"text-center mb-3\">\r\n                                Login Sebagai:\r\n                        </h6>\r\n                            <Row>\r\n                                <Col className=\"text-right border-right\">\r\n                                    <Button block outline={loginAs !== \"dosen\"} color=\"info\" onClick={e => setLoginAs(\"dosen\")}>Dosen</Button>\r\n                                </Col>\r\n                                <Col className=\"text-left border-left\">\r\n                                    <Button block outline={loginAs !== \"mahasiswa\"} color=\"secondary\" onClick={e => setLoginAs(\"mahasiswa\")}>Mahasiswa</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {!isSuccess && <Alert color=\"danger\">\r\n                            {errMessage}\r\n                        </Alert>}\r\n                        <Form onSubmit={onSubmit}>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label for=\"username\">Username</Label>\r\n                                    <Input\r\n                                        required\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\"\r\n                                        placeholder=\"Username\"\r\n                                        value={loginForm.username}\r\n                                        onChange={(e) =>\r\n                                            setLoginForm({\r\n                                                ...loginForm,\r\n                                                username: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\">Password</Label>\r\n                                    <Input\r\n                                        required\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"********\"\r\n                                        value={loginForm.password}\r\n                                        onChange={(e) =>\r\n                                            setLoginForm({\r\n                                                ...loginForm,\r\n                                                password: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <div className=\"text-center mt-4\">\r\n                                <Button size=\"lg\" className=\"purple-button\">\r\n                                    Login\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dashboard\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dashboard\\Dashboard.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\datatable\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\datatable\\DataTable.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dynamictable\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\dynamictable\\DynamicTable.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\home\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalcreate\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaket\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\jadwal\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soaldetail\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\home\\Home.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\Kelas.js",["367"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, Button, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport Spinner from '../../../components/spinner'\r\nimport download from 'downloadjs'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst INITIAL_STATE = {\r\n    name: \"\",\r\n    semester: 1\r\n}\r\n\r\nfunction Kelas() {\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [classForm, setClassForm] = useState(INITIAL_STATE)\r\n    const [errorCreate, setErrorCreate] = useState({\r\n        isVisible: false,\r\n        message: \"\"\r\n    })\r\n\r\n    const [errorName, setErrorName] = useState({\r\n        isVisible: false,\r\n        message: \"\"\r\n    })\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getClasses()\r\n            .then(() => setLoading(false))\r\n    }, [])\r\n\r\n    const getClasses = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/classes`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(val => {\r\n                            return {\r\n                                name: val.name,\r\n                                action: <Link to={`/kelas/${val.id}`}>\r\n                                    <Button outline size=\"sm\">Lihat Detail</Button>\r\n                                </Link>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const downloadExcel = (name) => {\r\n        if (!name) {\r\n            return\r\n        }\r\n        if (!checkClassName(classForm.name)) {\r\n            setErrorName({\r\n                ...errorName,\r\n                isVisible: true\r\n            })\r\n            return\r\n        }\r\n        axios.get(`${ENDPOINT_BACKEND}/classes/excel/${name}`, {\r\n            headers: { ...BEARER_TOKEN },\r\n            responseType: 'blob'\r\n        })\r\n            .then(res => {\r\n                const content = res.headers['content-type'];\r\n                download(res.data, name, content)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Kelas\",\r\n                field: \"name\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Kelas\",\r\n                },\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                name: \"TI-4A-2020\",\r\n                action: <Link to=\"/kelas/1\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n            {\r\n                name: \"MI-3C-2020\",\r\n                action: <Link to=\"/kelas/2\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n        ],\r\n    });\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        if (!checkClassName(classForm.name)) {\r\n            return\r\n        }\r\n        const data = new FormData()\r\n        Object.keys(classForm).forEach(key => {\r\n            data.append(key, classForm[key])\r\n        })\r\n        axios.post(`${ENDPOINT_BACKEND}/classes/upload`, data, { headers: { ...BEARER_TOKEN } })\r\n            .then(res => {\r\n                if (!res.data.success) {\r\n                    setErrorCreate({\r\n                        isVisible: true,\r\n                        message: res.data.message\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => {\r\n                setClassForm(INITIAL_STATE)\r\n                setIsFormShown(false)\r\n                setLoading(true)\r\n                getClasses()\r\n                    .then(() => setLoading(false))\r\n                    .catch(err => console.log(err))\r\n            })\r\n    }\r\n\r\n    const checkClassName = (name) => {\r\n        const names = name.split(\"-\")\r\n        if (names.length !== 3) {\r\n            setErrorName({\r\n                isVisible: true,\r\n                message: \"Pastikan format nama kelas benar\"\r\n            })\r\n            return false\r\n        }\r\n\r\n        if (!(names[0] === \"TI\" || names[0] === \"MI\")) {\r\n            setErrorName({\r\n                isVisible: true,\r\n                message: \"Prodi harus TI atau MI\"\r\n            })\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Daftar Kelas</h4>\r\n            <div className=\"text-right\">\r\n                <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)} className=\"mb-4\">Tambah Kelas</Button>\r\n            </div>\r\n            {isFormShown && (<div className=\"mt-4\">\r\n                <Form onSubmit={submitForm}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Nama Kelas</Label>\r\n                                <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"TI-1A-2021...\" value={classForm.name} onChange={e => setClassForm({ ...classForm, [e.target.name]: e.target.value })} />\r\n                                <FormText color=\"muted\">\r\n                                    <span className=\"text-danger\" hidden={!errorName.isVisible}>{errorName.message}\r\n                                        <br />\r\n                                    </span>\r\n                                    Nama kelas diisi dengan format [Prodi]-[Kelas]-[Tahun]\r\n                                    <br />\r\n                                    Contoh: TI-1A-2021\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Template File Excel Kelas: {(classForm.name) ? classForm.name : <span className=\"text-muted\">Isikan nama kelas</span>}</Label>\r\n                                <br />\r\n                                <Button color=\"success\" onClick={e => downloadExcel(classForm.name)}> <FontAwesomeIcon icon={faDownload} className=\"mr-2\" /> Download</Button>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"semester\">Semester</Label>\r\n                                <Input type=\"number\" id=\"semester\" name=\"semester\" className=\"w-25\" placeholder=\"Semester\" value={classForm.semester} onChange={e => setClassForm({ ...classForm, [e.target.name]: e.target.value })} min=\"1\" max=\"8\" />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-5\">\r\n                                <Label for=\"excel\">File Excel</Label>\r\n                                <Input type=\"file\" name=\"excel\" id=\"excel\" onChange={e => setClassForm({ ...classForm, [e.target.name]: e.target.files[0] })} required />\r\n                                <FormText color=\"muted\">\r\n                                    File Excel list mahasiswa\r\n                                </FormText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"text-right\">\r\n                        <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>)\r\n            }\r\n            { loading ? <Spinner /> : <div>\r\n                <Alert color=\"light\" isOpen={errorCreate.isVisible} className=\"border-danger text-danger mt-3\">\r\n                    {errorCreate.message}\r\n                </Alert>\r\n                <DataTable datatable={datatable} />\r\n            </div>}\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Kelas\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\jadwal\\Jadwal.js",["368"],"import { faChevronDown, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row, UncontrolledCollapse } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport Spinner from '../../../components/spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport { capitalizeFirstLetter } from '../../../lib/capitalizeWord';\r\nimport { getFormattedDate } from '../../../lib/getFormattedDate';\r\nimport { DateRange } from 'react-date-range';\r\nimport Select from 'react-select';\r\n\r\nconst INITIAL_STATE = {\r\n    start_date: \"\",\r\n    finish_date: \"\",\r\n    start_time: \"\",\r\n    finish_time: \"\",\r\n    type: \"\",\r\n    container: \"\",\r\n    description: \"\"\r\n}\r\n\r\nfunction Jadwal() {\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [scheduleForm, setScheduleForm] = useState(INITIAL_STATE)\r\n    const [loading, setLoading] = useState(true)\r\n    const [classes, setClasses] = useState()\r\n    const [selectedClass, setSelectedClass] = useState(null)\r\n\r\n    const [classesInput, setClassesInput] = useState([])\r\n    const [selectedClassInput, setSelectedClassInput] = useState([])\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setSelectedClassInput(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const [containers, setContainers] = useState([])\r\n\r\n    const [dateRange, setDateRange] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: null,\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getClasses()\r\n            .then((kelas) => {\r\n                setClassesInput(kelas.map(val => {\r\n                    return {\r\n                        value: val.id,\r\n                        label: val.name\r\n                    }\r\n                }))\r\n                setClasses(kelas)\r\n            })\r\n        getContainers()\r\n            .then(containers => {\r\n                setContainers(containers)\r\n            })\r\n        getSchedules()\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const filterData = () => {\r\n        const { startDate, endDate } = dateRange[0]\r\n        let params = {\r\n            startDate,\r\n            endDate\r\n        }\r\n        if (selectedClass) {\r\n            params = {\r\n                ...params,\r\n                kelas: selectedClass\r\n            }\r\n        }\r\n        getSchedules(params)\r\n    }\r\n\r\n    const getSchedules = (params = null) => {\r\n        let parameters = {}\r\n\r\n        if (params) {\r\n            if (params.kelas) {\r\n                parameters = {\r\n                    ...parameters,\r\n                    kelas: params.kelas\r\n                }\r\n            }\r\n\r\n            if (params.startDate) {\r\n                parameters = {\r\n                    ...parameters,\r\n                    startDate: params.startDate\r\n                }\r\n            }\r\n\r\n            if (params.endDate) {\r\n                parameters = {\r\n                    ...parameters,\r\n                    endDate: params.endDate\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/schedules`, {\r\n                headers: { ...BEARER_TOKEN },\r\n                params: parameters\r\n            })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(val => {\r\n                            return {\r\n                                id: val.id,\r\n                                description: val.description,\r\n                                class: val.class.name,\r\n                                container: val.container.description,\r\n                                type: capitalizeFirstLetter(val.type),\r\n                                date: <div><b>{getFormattedDate(val.start_date)}</b> - <b>{getFormattedDate(val.finish_date)}</b></div>,\r\n                                time: <div><b>{val.start_time}</b> - <b>{val.finish_time}</b></div>,\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const getClasses = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/classes`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(false))\r\n        })\r\n    }\r\n\r\n    const getContainers = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/containers`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const [datatable, setDatatable] = React.useState({\r\n        columns: [\r\n            {\r\n                label: \"Keterangan\",\r\n                field: \"description\",\r\n                width: 270,\r\n            },\r\n            {\r\n                label: \"Kelas\",\r\n                field: \"class\",\r\n                width: 200,\r\n            },\r\n            {\r\n                label: \"Paket Soal\",\r\n                field: \"container\",\r\n                width: 200,\r\n            },\r\n            {\r\n                label: \"Tipe\",\r\n                field: \"type\",\r\n                width: 200,\r\n            },\r\n            {\r\n                label: \"Tanggal\",\r\n                field: \"date\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n            {\r\n                label: \"Waktu\",\r\n                field: \"time\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                description: \"Latihan 1\",\r\n                class: \"TI-4C\",\r\n                container: \"Latihan 1\",\r\n                data: \"08-02-2021 - 09-02-2021\",\r\n                time: \"10:00:00 - 12:00:00\",\r\n                action: <Button outline color=\"danger\">\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                    />\r\n                </Button>\r\n            },\r\n            {\r\n                description: \"Kuis 1\",\r\n                class: \"TI-4C\",\r\n                container: \"Kuis 1\",\r\n                start_date: \"10-02-2021\",\r\n                finish_date: \"01-02-2021\",\r\n                start_time: \"11:00:00\",\r\n                finish_time: \"12:00:00\",\r\n                action: <Button outline color=\"danger\">\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                    />\r\n                </Button>\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        let submittedForm = { ...scheduleForm };\r\n        submittedForm.classes = selectedClassInput\r\n        axios.post(`${ENDPOINT_BACKEND}/schedules`, submittedForm, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                setLoading(true)\r\n                getSchedules()\r\n                    .then(() => {\r\n                        setScheduleForm(INITIAL_STATE)\r\n                        setSelectedClassInput([])\r\n                        setIsFormShown(false)\r\n                        setLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Jadwal</h4>\r\n            <div className=\"text-right\">\r\n                <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)} className=\"mb-4\">Tambah Jadwal</Button>\r\n            </div>\r\n            {isFormShown && (<div className=\"mt-4\">\r\n                <Form onSubmit={submitForm}>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Keterangan</Label>\r\n                        <Input type=\"text\" id=\"description\" name=\"description\" placeholder=\"UAS 1, Latihan 1, ...\" value={scheduleForm.description} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })} />\r\n                    </FormGroup>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"start_date\">Tanggal Mulai</Label>\r\n                                <Input type=\"date\" id=\"start_date\" name=\"start_date\" value={scheduleForm.start_date} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"finish_date\">Tanggal Selesai</Label>\r\n                                <Input type=\"date\" id=\"finish_date\" name=\"finish_date\" value={scheduleForm.finish_date} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"start_time\">Waktu Mulai</Label>\r\n                                <Input type=\"time\" id=\"start_time\" name=\"start_time\" value={scheduleForm.start_time} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"type\">Tipe Jadwal</Label>\r\n                                <Input type=\"select\" name=\"type\" id=\"type\" defaultValue={'DEFAULT'} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })}>\r\n                                    <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                    <option value=\"latihan\">Latihan</option>\r\n                                    <option value=\"ujian\">Ujian</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"container_id\">Paket Soal</Label>\r\n                                <Input type=\"select\" name=\"container_id\" id=\"container_id\" defaultValue={'DEFAULT'} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })}>\r\n                                    <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                    {containers.map(container => {\r\n                                        return <option value={container.id}>{container.description}</option>\r\n                                    })}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"finish_time\">Waktu Selesai</Label>\r\n                                <Input type=\"time\" id=\"finish_time\" name=\"finish_time\" value={scheduleForm.finish_time} onChange={e => setScheduleForm({ ...scheduleForm, [e.target.name]: e.target.value })} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label> Kelas </Label>\r\n                        <Select\r\n                            // defaultValue={[colourOptions[2], colourOptions[3]]}\r\n                            isMulti\r\n                            isClearable\r\n                            name=\"classes\"\r\n                            options={classesInput}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            value={classesInput.filter(obj => selectedClassInput.includes(obj.value))}\r\n                            onChange={handleChangeSelect}\r\n                            placeholder=\"Masukkan nama Kelas\"\r\n                        />\r\n                    </FormGroup>\r\n                    <div className=\"text-right\">\r\n                        <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                    </div>\r\n                </Form>\r\n                <hr />\r\n            </div>)}\r\n            {loading ? <Spinner /> : <div>\r\n                <h5>Filter Data</h5>\r\n                <Row className=\"align-items-start\">\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"class\">Kelas</Label>\r\n                            <Input type=\"select\" name=\"class\" id=\"class\" value={selectedClass} defaultValue={'DEFAULT'} onChange={e => setSelectedClass(e.target.value)}>\r\n                                <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                {\r\n                                    classes.map(val => <option key={val.id} value={val.id}>{val.name}</option>)\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <Button color=\"info\" outline className=\"mb-3\" onClick={filterData}>Cari</Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Button id=\"daterangeToggler\" color=\"white\">Pilih Jangka Waktu <FontAwesomeIcon icon={faChevronDown} className=\"mr-2\" /></Button>\r\n                            <UncontrolledCollapse toggler=\"#daterangeToggler\" className=\"mt-3\">\r\n                                <DateRange\r\n                                    editableDateInputs={false}\r\n                                    onChange={item => setDateRange([item.selection])}\r\n                                    moveRangeOnFirstSelection={false}\r\n                                    ranges={dateRange}\r\n                                />\r\n                            </UncontrolledCollapse>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"mt-4\">\r\n                    <DataTable datatable={datatable} />\r\n                </div>\r\n            </div>}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Jadwal\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaket\\SoalPaket.js",["369"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport Spinner from '../../../components/spinner/Spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    description: \"\",\r\n    type: \"\"\r\n}\r\n\r\nfunction SoalPaket() {\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [containerForm, setContainerForm] = useState(INITIAL_STATE)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getContainers()\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getContainers = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/containers/`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(container => {\r\n                            return {\r\n                                description: container.description,\r\n                                sum: container.questionCount,\r\n                                created_by: container.User.name,\r\n                                action: <Link to={`/paketsoal/${container.id}`}>\r\n                                    <Button outline size=\"sm\">Lihat Detail</Button>\r\n                                </Link>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Deskripsi\",\r\n                field: \"description\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Deskripsi\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Jumlah Soal\",\r\n                field: \"sum\",\r\n                width: 200,\r\n            },\r\n            {\r\n                label: \"Dibuat Oleh\",\r\n                field: \"created_by\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                description: \"Latihan 1\",\r\n                type: \"latihan\",\r\n                sum: 10,\r\n                action: <Link to=\"/paketsoal/1\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n            {\r\n                description: \"Kuis 1\",\r\n                type: \"Kuis\",\r\n                sum: 10,\r\n                action: <Link to=\"/paketsoal/2\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            }\r\n        ],\r\n    });\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${ENDPOINT_BACKEND}/containers`, { ...containerForm }, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                setLoading(true)\r\n                getContainers()\r\n                    .then(() => {\r\n                        setLoading(false)\r\n                        setContainerForm(INITIAL_STATE)\r\n                        setIsFormShown(false)\r\n                    })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Paket Soal</h4>\r\n            <div className=\"text-right\">\r\n                <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)} className=\"mb-4\">Tambah Paket</Button>\r\n            </div>\r\n            {isFormShown && (<div className=\"mt-4 mb-5\">\r\n                <Form onSubmit={submitForm}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label for=\"description\">Deskripsi Paket Soal</Label>\r\n                                <Input type=\"text\" id=\"description\" name=\"description\" placeholder=\"Kuis 1, Latihan 1...\" value={containerForm.description} onChange={e => setContainerForm({ ...containerForm, [e.target.name]: e.target.value })} />\r\n                            </FormGroup>\r\n                            <div className=\"text-right\">\r\n                                <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>)}\r\n            {loading ? <Spinner /> : <DataTable datatable={datatable} />}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SoalPaket\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalcreate\\SoalCreate.js",["370"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, FormText, Input, Label } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport Select from 'react-select';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport axios from 'axios';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport Spinner from '../../../components/spinner';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    text: \"\",\r\n    answer: \"\",\r\n    answer_pic: \"\",\r\n    case_study: \"\",\r\n}\r\n\r\nfunction SoalCreate() {\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [questionForm, setQuestionForm] = useState(INITIAL_STATE)\r\n    const [selectedTables, setSelectedTables] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [caseStudies, setCaseStudies] = useState([])\r\n    // const [tables, setTables] = useState([\r\n    //     { value: \"user\", label: \"User\" },\r\n    //     { value: \"mahasiswa\", label: \"Mahasiswa\" }\r\n    // ])\r\n    const [tables, setTables] = useState([])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getSoal()\r\n            .then(() => {\r\n                setLoading(false)\r\n                getCaseStudies()\r\n            })\r\n    }, [])\r\n\r\n    const getCaseStudies = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/casestudies`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setCaseStudies(data.data)\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const getTables = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/caseStudies/${id}`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setTables(Object.keys(data.data.tables).map(key => {\r\n                        return {\r\n                            value: key,\r\n                            label: key\r\n                        }\r\n                    }))\r\n                })\r\n        })\r\n    }\r\n\r\n    const getSoal = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/questions`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(val => {\r\n                            return {\r\n                                id: val.id,\r\n                                text: <span dangerouslySetInnerHTML={{ __html: val.text }}></span>,\r\n                                answer: val.answer,\r\n                                case_study: val.CaseStudy.name,\r\n                                user_name: val.User.name,\r\n                                action: <Link to={`/soaldetail/${val.id}`}>\r\n                                    <Button outline size=\"sm\">Lihat Detail</Button>\r\n                                </Link>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const onChangeCaseStudy = (e) => {\r\n        setTables([])\r\n        setSelectedTables([])\r\n        setQuestionForm({ ...questionForm, [e.target.name]: e.target.value })\r\n        getTables(e.target.value)\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"ID\",\r\n                field: \"id\",\r\n                width: 100,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"ID\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Teks Soal\",\r\n                field: \"text\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Jawaban\",\r\n                field: \"answer\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Studi Kasus\",\r\n                field: \"case_study\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"Dibuat Oleh\",\r\n                field: \"user_name\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 200,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                text: \"Tampilkan nama matakuliah yang diikuti oleh mahasiswa dengan nama depan Hilal\",\r\n                answer: `SELECT nama_matkul FROM tb_mahasiswa m JOIN tb_jadwal j on m.NIM = j.NIM JOIN tb_matkul mk ON j.id_matkul = mk.id_matkul WHERE m.nama_depan = 'Hilal'`,\r\n                case_study: \"Kampus\",\r\n                user_name: \"Dosen1\",\r\n                action: <Link to=\"/soaldetail/1\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"Tampilkan nama matakuliah yang diikuti oleh mahasiswa dengan nama depan Hilal\",\r\n                answer: `SELECT nama_matkul FROM tb_mahasiswa m JOIN tb_jadwal j on m.NIM = j.NIM JOIN tb_matkul mk ON j.id_matkul = mk.id_matkul WHERE m.nama_depan = 'Hilal'`,\r\n                case_study: \"Kampus\",\r\n                user_name: \"Dosen1\",\r\n                action: <Link to=\"/soaldetail/1\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            }\r\n        ],\r\n    });\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setSelectedTables(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setQuestionForm({ ...questionForm, text: content })\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        Object.keys(questionForm).forEach(key => {\r\n            data.append(key, questionForm[key])\r\n        })\r\n        data.append('tables', selectedTables.join(','))\r\n        axios.post(`${ENDPOINT_BACKEND}/questions`, data, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(res => {\r\n                console.log(res.statusText)\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => {\r\n                setQuestionForm(INITIAL_STATE)\r\n                setSelectedTables([])\r\n                setIsFormShown(false)\r\n                setLoading(true)\r\n                getSoal()\r\n                    .then(() => setLoading(false))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Kelas</h4>\r\n            <div className=\"text-right\">\r\n                <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)} className=\"mb-4\">Tambah Soal</Button>\r\n            </div>\r\n            {isFormShown && (<div className=\"mt-4\">\r\n                <Form onSubmit={submitForm}>\r\n                    <FormGroup>\r\n                        <Label for=\"text\">Teks Soal</Label>\r\n                        <Editor\r\n                            apiKey=\"b8t1klp9vk4ghizmb2nikd9vdp3x4l46r57glcya41u3avmn\"\r\n                            init={{\r\n                                height: 250,\r\n                                menubar: false,\r\n                                plugins: [\r\n                                    'advlist autolink lists link image charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar:\r\n                                    'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',\r\n                            }}\r\n                            onEditorChange={handleEditorChange}\r\n                        />\r\n                        {/* <Input type=\"textarea\" id=\"text\" name=\"text\" placeholder=\"Tampilkan ...\" value={questionForm.text} onChange={e => setQuestionForm({ ...questionForm, [e.target.name]: e.target.value })} /> */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"answer\">Query Kunci</Label>\r\n                        <Input type=\"textarea\" id=\"answer\" name=\"answer\" placeholder=\"SELECT ...\" value={questionForm.answer} onChange={e => setQuestionForm({ ...questionForm, [e.target.name]: e.target.value })} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"answer_pic\">Gambar Jawaban</Label>\r\n                        <Input type=\"file\" name=\"answer_pic\" id=\"answer_pic\" onChange={e => setQuestionForm({ ...questionForm, [e.target.name]: e.target.files[0] })} />\r\n                        <FormText color=\"muted\">\r\n                            Hasil screenshot dari tabel yang dihasilkan\r\n                        </FormText>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"case_study\">Pilih Studi Kasus</Label>\r\n                        <Input type=\"select\" name=\"case_study\" id=\"case_study\" defaultValue={'DEFAULT'} onChange={onChangeCaseStudy}>\r\n                            <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                            {\r\n                                caseStudies.map(val => <OptionDropdown key={val.id} id={val.id} name={val.name} username={val.User.name} />)\r\n                            }\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label> Tabel Yang Digunakan </Label>\r\n                        <Select\r\n                            // defaultValue={[colourOptions[2], colourOptions[3]]}\r\n                            isMulti\r\n                            isClearable\r\n                            name=\"tables\"\r\n                            options={tables}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            value={tables.filter(obj => selectedTables.includes(obj.value))}\r\n                            onChange={handleChangeSelect}\r\n                            placeholder=\"Table yang digunakan\"\r\n                        />\r\n                    </FormGroup>\r\n                    <div className=\"text-right\">\r\n                        <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>)}\r\n            { loading ? <Spinner /> : <DataTable datatable={datatable} />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction OptionDropdown(props) {\r\n    return (\r\n        <option value={props.id}>{props.name} - {props.username}</option>\r\n    )\r\n}\r\n\r\nexport default SoalCreate\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soaldetail\\SoalDetail.js",["371","372"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Button, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap'\r\nimport ButtonKembali from '../../../components/buttonkembali'\r\nimport Spinner from '../../../components/spinner'\r\nimport { BEARER_TOKEN, ENDPOINT_ASSETS, ENDPOINT_BACKEND } from '../../../config'\r\nimport TableSample from '../../mahasiswa/soalshow/TableSample'\r\n\r\nfunction SoalDetail(props) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [question, setQuestion] = useState(null)\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getQuestion(id)\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getQuestion = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/questions/${id}`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setQuestion(data.data)\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            <div className=\"text-right\">\r\n                <Button outline color=\"danger\">\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                    />\r\n                </Button>\r\n            </div>\r\n            {loading ? <Spinner /> : <Row>\r\n                <Col>\r\n                    <p>Teks Soal:</p>\r\n                    <h5 className=\"mb-5\"><span dangerouslySetInnerHTML={{ __html: question.text }}></span></h5>\r\n                    <p>Query Kunci:</p>\r\n                    <h5 className=\"mb-5\">{question.answer}</h5>\r\n                    <p>Gambar:</p>\r\n                    <img src={`${ENDPOINT_ASSETS}/${question.answer_pic}`} alt=\"gambar screenshot jawaban\" className=\"mb-5\" />\r\n                </Col>\r\n                <Col className=\"border-left\">\r\n                    <p>Studi Kasus:</p>\r\n                    <h5 className=\"mb-5\">{question.CaseStudy.name}</h5>\r\n                    <p>Tabel yang digunakan</p>\r\n                    <ListGroup>\r\n                        <TableSample tables={question.tables} />\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SoalDetail\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\StudiKasus.js",["373"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Col, Container, Form, FormGroup, FormText, Input, Label, Row, Spinner } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\n\r\nconst INITIAL_STATE = {\r\n    name: \"\",\r\n    sql: null\r\n}\r\n\r\nfunction StudiKasus() {\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [studyCaseForm, setStudyCaseForm] = useState(INITIAL_STATE)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getCaseStudies()\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getCaseStudies = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/casestudies`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(val => {\r\n                            return {\r\n                                name: val.name,\r\n                                user: val.User.name,\r\n                                action: <Link to={`/studikasus/${val.id}`}>\r\n                                    <Button color=\"secondary\" outline size=\"sm\">Lihat Detail</Button>\r\n                                </Link>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Nama\",\r\n                field: \"name\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Kelas\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Dibuat Oleh\",\r\n                field: \"user\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                name: \"Perkuliahan\",\r\n                user: \"nama dosen\",\r\n                action: <Link to=\"/studikasus/1\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n            {\r\n                name: \"Rumah Sakit\",\r\n                user: \"nama dosen\",\r\n                action: <Link to=\"/studikasus/2\">\r\n                    <Button>Lihat Detail</Button>\r\n                </Link>\r\n            },\r\n        ],\r\n    });\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        Object.keys(studyCaseForm).forEach(key => {\r\n            data.append(key, studyCaseForm[key])\r\n        })\r\n        axios.post(`${ENDPOINT_BACKEND}/casestudies/upload`, data, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(res => {\r\n                console.log(res.statusText)\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => {\r\n                setStudyCaseForm(INITIAL_STATE)\r\n                setIsFormShown(false)\r\n                setLoading(true)\r\n                getCaseStudies()\r\n                    .then(() => setLoading(false))\r\n                    .catch(err => console.log(err))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Studi Kasus</h4>\r\n            <div className=\"text-right\">\r\n                <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)} className=\"mb-4\">Tambah Studi Kasus</Button>\r\n            </div>\r\n            {isFormShown && (<div className=\"mt-4\">\r\n                <Form onSubmit={submitForm}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Nama Studi Kasus</Label>\r\n                                <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Kelurahan, Rumah Sakit, ...\" value={studyCaseForm.name} onChange={e => setStudyCaseForm({ ...studyCaseForm, [e.target.name]: e.target.value })} required />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"sql\">File SQL</Label>\r\n                                <Input type=\"file\" name=\"sql\" id=\"sql\" onChange={e => setStudyCaseForm({ ...studyCaseForm, [e.target.name]: e.target.files[0] })} required />\r\n                                <FormText color=\"muted\">\r\n                                    File SQL hasil backup\r\n                        </FormText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"text-right\">\r\n                        <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>)}\r\n            {\r\n                loading ? <Spinner /> : <DataTable datatable={datatable} />\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default StudiKasus\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\SoalPaketDetail.js",["374"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport ButtonKembali from '../../../components/buttonkembali/ButtonKembali'\r\nimport DataTable from '../../../components/datatable';\r\nimport Spinner from '../../../components/spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\n\r\nconst INITIAL_STATE = {\r\n    create: \"\",\r\n    insert: \"\"\r\n}\r\n\r\nfunction SoalPaketDetail(props) {\r\n    const { id } = useParams()\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n    const [tableForm, setTableForm] = useState(INITIAL_STATE)\r\n    const [container, setContainer] = useState(null)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getDetailContainers(id)\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getDetailContainers = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/containers/${id}`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    setContainer(data.data)\r\n                    const questions = data.data.questions\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: questions.map(question => {\r\n                            return {\r\n                                id: question.id,\r\n                                text: <span dangerouslySetInnerHTML={{ __html: question.text }}></span>,\r\n                                answer: question.answer,\r\n                                study_case: question.CaseStudy.name,\r\n                                user_name: question.User.name,\r\n                                action: <Button outline size=\"sm\" color=\"danger\" onClick={e => deleteQuestion(id, question.id)}>\r\n                                    <FontAwesomeIcon\r\n                                        icon={faTrashAlt}\r\n                                    />\r\n                                </Button>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const deleteQuestion = (id, questionId) => {\r\n        axios.put(`${ENDPOINT_BACKEND}/containers/${id}/remove/${questionId}`, {}, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                setLoading(true)\r\n                getDetailContainers(id)\r\n                    .then(() => {\r\n                        setLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const deleteContainer = (id) => {\r\n        axios.delete(`${ENDPOINT_BACKEND}/containers/${id}`, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                props.history.push('/paketsoal')\r\n            })\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"ID\",\r\n                field: \"id\",\r\n                width: 100,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"ID\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Teks Soal\",\r\n                field: \"text\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Jawaban\",\r\n                field: \"answer\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Studi Kasus\",\r\n                field: \"study_case\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"Dibuat Oleh\",\r\n                field: \"user_name\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 200,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                text: \"Tampilkan nama matakuliah yang diikuti oleh mahasiswa dengan nama depan Hilal\",\r\n                answer: `SELECT nama_matkul FROM tb_mahasiswa m JOIN tb_jadwal j on m.NIM = j.NIM JOIN tb_matkul mk ON j.id_matkul = mk.id_matkul WHERE m.nama_depan = 'Hilal'`,\r\n                study_case: \"Kampus\",\r\n                user_name: \"Dosen1\",\r\n                action: <Button outline color=\"danger\">\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                    />\r\n                </Button>\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"Tampilkan nama matakuliah yang diikuti oleh mahasiswa dengan nama depan Hilal\",\r\n                answer: `SELECT nama_matkul FROM tb_mahasiswa m JOIN tb_jadwal j on m.NIM = j.NIM JOIN tb_matkul mk ON j.id_matkul = mk.id_matkul WHERE m.nama_depan = 'Hilal'`,\r\n                study_case: \"Kampus\",\r\n                user_name: \"Dosen1\",\r\n                action: <Button outline color=\"danger\">\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                    />\r\n                </Button>\r\n            }\r\n        ],\r\n    });\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        console.log(tableForm)\r\n        setTableForm(INITIAL_STATE)\r\n        setIsFormShown(false)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            {loading ? <Spinner /> : <div>\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <h4 className=\"mb-4\">{container.description}</h4>\r\n                    <Button outline color=\"danger\" onClick={e => deleteContainer(id)} >\r\n                        <FontAwesomeIcon\r\n                            icon={faTrashAlt}\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <div className=\"text-right mt-5 mb-4\">\r\n                    <Link to={`/paketsoal/${id}/add`}><Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)}>Tambah Soal</Button></Link>\r\n                </div>\r\n                {isFormShown && (<div className=\"mt-4\">\r\n                    <Form onSubmit={submitForm}>\r\n                        <FormGroup>\r\n                            <Label for=\"create\">Query Create Table</Label>\r\n                            <Input type=\"textarea\" id=\"create\" name=\"create\" placeholder=\"CREATE TABLE ...\" value={tableForm.name} onChange={e => setTableForm({ ...tableForm, [e.target.name]: e.target.value })} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"insert\">Query Insert Data</Label>\r\n                            <Input type=\"textarea\" id=\"insert\" name=\"insert\" placeholder=\"INSERT INTO ...\" value={tableForm.db_name} onChange={e => setTableForm({ ...tableForm, [e.target.name]: e.target.value })} />\r\n                        </FormGroup>\r\n                        <div className=\"text-right\">\r\n                            <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>)}\r\n                <DataTable datatable={datatable} />\r\n            </div>}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SoalPaketDetail\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\JadwalSesi.js",["375","376","377"],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container } from \"reactstrap\";\r\nimport { AuthContext } from \"../../../App\";\r\nimport Spinner from \"../../../components/spinner\";\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from \"../../../config\";\r\nimport { capitalizeFirstLetter } from \"../../../lib/capitalizeWord\";\r\nimport { getFormattedDate } from \"../../../lib/getFormattedDate\";\r\nimport TableSesi from \"./TabelSesi\";\r\n\r\nfunction JadwalSesi(props) {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getSchedulesStudent = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/schedules/students`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(res => resolve(res.data.data))\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const createSession = (scheduleId) => {\r\n        axios.post(`${ENDPOINT_BACKEND}/sessions`, {\r\n            schedule: scheduleId\r\n        }, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(res => {\r\n                props.history.push(`/soalsesi/${res.data.data.id}`)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getSchedulesStudent()\r\n            .then(data => {\r\n                setLoading(false)\r\n                setDatatable({\r\n                    ...datatable,\r\n                    rows: data.map(val => {\r\n                        return {\r\n                            id: val.id,\r\n                            description: val.description,\r\n                            type: capitalizeFirstLetter(val.type),\r\n                            date: <div><b>{getFormattedDate(val.start_date)}</b> - <b>{getFormattedDate(val.finish_date)}</b></div>,\r\n                            // finish_date: getFormattedDate(val.finish_date),\r\n                            time: <div><b>{val.start_time}</b> - <b>{val.finish_time}</b></div>,\r\n                            // finish_time: val.finish_time,\r\n                            action: <Button className=\"purple-button\" onClick={e => createSession(val.id)}>Kerjakan</Button>\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n    }, [])\r\n\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Id\",\r\n                field: \"id\",\r\n                width: 50,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Id\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Keterangan\",\r\n                field: \"description\",\r\n                width: 270,\r\n            },\r\n            {\r\n                label: \"Tipe\",\r\n                field: \"type\",\r\n                width: 200,\r\n            },\r\n            {\r\n                label: \"Tanggal\",\r\n                field: \"date\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n            // {\r\n            //     label: \"Tgl Selesai\",\r\n            //     field: \"finish_date\",\r\n            //     sort: \"disabled\",\r\n            //     width: 100,\r\n            // },\r\n            {\r\n                label: \"Waktu\",\r\n                field: \"time\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n            // {\r\n            //     label: \"Waktu Selesai\",\r\n            //     field: \"finish_time\",\r\n            //     sort: \"disabled\",\r\n            //     width: 100,\r\n            // },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                description: \"Latihan 1\",\r\n                type: \"Latihan\",\r\n                start_date: \"08-02-2021\",\r\n                finish_date: \"09-02-2021\",\r\n                start_time: \"10:00:00\",\r\n                finish_time: \"12:00:00\",\r\n                action: <Link to=\"/soalsesi/1\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n            {\r\n                id: 2,\r\n                description: \"Kuis 1\",\r\n                type: \"Kuis\",\r\n                start_date: \"10-02-2021\",\r\n                finish_date: \"01-02-2021\",\r\n                start_time: \"11:00:00\",\r\n                finish_time: \"12:00:00\",\r\n                action: <Link to=\"/soalsesi/2\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Jadwal Sesi</h4>\r\n            {loading ? <Spinner /> : <div>\r\n                <TableSesi datatable={datatable} />\r\n            </div>}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default JadwalSesi;\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\jadwalsesi\\TabelSesi.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\NilaiMhs.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\nilai\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\nilai\\Nilai.js",["378"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Container, FormGroup, Input, Label, Row, Button } from 'reactstrap';\r\nimport DataTable from '../../../components/datatable';\r\nimport Spinner from '../../../components/spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport { getFormattedDate } from '../../../lib/getFormattedDate';\r\n\r\nfunction Nilai() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [kelas, setKelas] = useState([])\r\n    const [selectedClass, setSelectedClass] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getScores()\r\n            .then(() => {\r\n                getClasses()\r\n                    .then(newKelas => {\r\n                        setKelas(newKelas)\r\n                        setLoading(false)\r\n                    })\r\n            })\r\n    }, [])\r\n\r\n    const getScores = (kelas = null) => {\r\n        let params = {}\r\n        if (kelas) {\r\n            params = {\r\n                kelas\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/scores/student`, {\r\n                headers: { ...BEARER_TOKEN },\r\n                params\r\n            })\r\n                .then(({ data }) => {\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.map(score => {\r\n                            return {\r\n                                class: score.className,\r\n                                schedule: score.schedule,\r\n                                score: score.score,\r\n                                start_date: getFormattedDate(score.start_date)\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(false))\r\n        })\r\n    }\r\n\r\n    const getClasses = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/classes/students`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(false))\r\n        })\r\n    }\r\n\r\n    const [datatable, setDatatable] = React.useState({\r\n        columns: [\r\n            {\r\n                label: \"Kelas\",\r\n                field: \"class\",\r\n                width: 150,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Kelas\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Jadwal\",\r\n                field: \"schedule\",\r\n                width: 250,\r\n            },\r\n            {\r\n                label: \"Tgl Mulai\",\r\n                field: \"start_date\",\r\n                sort: \"desc\",\r\n                width: 100,\r\n            },\r\n            {\r\n                label: \"Nilai\",\r\n                field: \"score\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                class: \"TI-4C\",\r\n                schedule: \"Latihan 1\",\r\n                score: 100,\r\n                start_date: \"12-02-2021\"\r\n            },\r\n            {\r\n                class: \"TI-4C\",\r\n                schedule: \"Kuis 1\",\r\n                score: 100,\r\n                start_date: \"21-02-2021\"\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <h4 className=\"mb-4\">Nilai Mahasiswa</h4>\r\n            {loading ? <Spinner /> :\r\n                <div>\r\n                    <Row className=\"align-items-center\">\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <Label for=\"class\">Pilih Kelas</Label>\r\n                                <Input type=\"select\" name=\"class\" id=\"class\" value={selectedClass} defaultValue={'DEFAULT'} onChange={e => setSelectedClass(e.target.value)}>\r\n                                    <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                    {\r\n                                        kelas.map(val => <option key={val.id} value={val.id}>{val.name}</option>)\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button color=\"info\" outline className=\"mt-3\" onClick={e => getScores(selectedClass)}>Cari</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <DataTable datatable={datatable} />\r\n                </div>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Nilai\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\SoalSesi.js",["379"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Col, Container, ModalBody, ModalFooter, ModalHeader, Row, Modal } from \"reactstrap\";\r\nimport TabelSoal from \"./TabelSoal\";\r\nimport ButtonKembali from '../../../components/buttonkembali';\r\nimport axios from 'axios';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport Countdown from '../../../components/countdown/Countdown';\r\nimport Spinner from '../../../components/spinner';\r\n\r\nfunction SoalSesi(props) {\r\n    const { id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [scheduleDate, setScheduleDate] = useState(new Date())\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const showModal = () => setModal(true)\r\n\r\n    const getQuestions = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/sessions/${id}`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(res => resolve(res.data))\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const submitSession = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/sessions/${id}`, {}, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(res => props.history.push('/jadwalsesi'))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getQuestions()\r\n            .then(({ data }) => {\r\n                setScheduleDate(new Date(`${data.Schedule.finish_date} ${data.Schedule.finish_time}`))\r\n                const questions = (data.Schedule.Container) ? data.Schedule.Container.questions : []\r\n                setDatatable({\r\n                    ...datatable,\r\n                    rows: questions.map(question => {\r\n                        return {\r\n                            question: <span dangerouslySetInnerHTML={{ __html: question.text }}></span>,\r\n                            action: <Link to={{\r\n                                pathname: `/soal/${question.id}`,\r\n                                state: {\r\n                                    session: id\r\n                                }\r\n                            }}>\r\n                                <Button className=\"purple-button\">Kerjakan</Button>\r\n                            </Link>,\r\n                        }\r\n                    })\r\n                })\r\n                setLoading(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Teks Soal\",\r\n                field: \"question\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"question\",\r\n                },\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                question: \"Tampilkan nama matakuliah, jumlah jadwal dan ruangan dari matakuliah dengan jumlah jadwal paling sedikit\",\r\n                type: \"Latihan\",\r\n                action: <Link to=\"/soal/1\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n            {\r\n                id: 2,\r\n                question: \"Tampilkan NIM, gabungan nama depan dan nama belakang (dipisah spasi) dan jumlah jadwal dari masing-masing mahasiswa\",\r\n                action: <Link to=\"/soal/2\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            {loading ? <Spinner /> : <div>\r\n                <Row className=\"mb-4\">\r\n                    <Col lg=\"9\" md=\"6\">\r\n                        <ButtonKembali history={props.history} />\r\n                    </Col>\r\n                    {/* <Col className=\"d-flex justify-content-between align-items-center\">\r\n                    <div>Time Left : </div>\r\n                    <div className=\"text-right\">\r\n                        <strong><Clock date={new Date(2021, 1, 20).getTime()} /></strong>\r\n                    </div>\r\n                </Col> */}\r\n                    <Countdown schedule={scheduleDate} showModal={showModal} />\r\n                </Row>\r\n                <TabelSoal datatable={datatable} />\r\n                <div className=\"text-right mt-2\">\r\n                    <Button color=\"info\" size=\"lg\" onClick={submitSession}>Selesaikan Sesi</Button>\r\n                </div>\r\n            </div>}\r\n\r\n            <Modal isOpen={modal} toggle={toggle} backdrop=\"static\">\r\n                <ModalHeader>Pemberitahuan</ModalHeader>\r\n                <ModalBody>\r\n                    Waktu Habis, Selesaikan sesi sekarang juga\r\n        </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"info\" onClick={submitSession}>Selesaikan Sesi</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default SoalSesi\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\TabelSoal.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\Clock.js",[],["380","381"],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\SoalShow.js",["382"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Input, Row, Toast, ToastBody, ToastHeader, Button } from 'reactstrap'\r\nimport ButtonKembali from '../../../components/buttonkembali'\r\nimport TableSample from './TableSample'\r\nimport { useParams } from 'react-router'\r\nimport axios from 'axios'\r\nimport { ENDPOINT_BACKEND, ENDPOINT_ASSETS, BEARER_TOKEN } from '../../../config'\r\nimport Spinner from '../../../components/spinner'\r\nimport DynamicTable from '../../../components/dynamictable'\r\n\r\nfunction SoalShow(props) {\r\n    const { id } = useParams()\r\n    const { state: { session } } = props.location\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [question, setQuestion] = useState()\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [queryStatus, setQueryStatus] = useState({\r\n        similarity: -1,\r\n        success: false,\r\n        message: \"Pesan Placeholder\",\r\n    })\r\n    const [resultQuery, setResultQuery] = useState(null)\r\n\r\n    const [answer, setAnswer] = useState(\"\")\r\n\r\n    const toggleToast = () => setShowToast(!showToast);\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`${ENDPOINT_BACKEND}/questions/${id}`, { headers: { ...BEARER_TOKEN } })\r\n            .then(({ data }) => {\r\n                setQuestion(data.data)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const testAnswer = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/sessions/${session}/answer/${id}`, {\r\n            answer,\r\n            type: \"test\"\r\n        }, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(({ data }) => {\r\n                setQueryStatus(data.data)\r\n                setShowToast(true)\r\n                if (data.data.success) {\r\n                    setResultQuery(data.data.resQuery)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const submitAnswer = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/sessions/${session}/answer/${id}`, {\r\n            answer,\r\n            type: \"submit\"\r\n        }, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(({ data }) => {\r\n                props.history.push(`/soalsesi/${session}`)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            {loading ? <Spinner /> : <div>\r\n                <span dangerouslySetInnerHTML={{ __html: question.text }}></span>\r\n                <Row className=\"mt-4\">\r\n                    <Col sm=\"12\" md=\"6\">\r\n                        <Input type=\"textarea\" name=\"text\" rows=\"4\" value={answer} onChange={e => setAnswer(e.target.value)} />\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-4\">\r\n                            <Button outline onClick={testAnswer}>\r\n                                Test Query\r\n                            </Button>\r\n                            <Button className=\"purple-button\" onClick={submitAnswer}>\r\n                                Submit Query\r\n                                </Button>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <Toast isOpen={showToast} className={`mt-5 w-100`} style={{ flexBasis: \"100%\" }}>\r\n                                <ToastHeader toggle={toggleToast} className={`${(queryStatus.success) ? 'text-success' : 'text-danger'}`}>Query {(queryStatus.success) ? \"Sukses\" : \"Error\"}</ToastHeader>\r\n                                <ToastBody>\r\n                                    {(!queryStatus.success) ? <span>\r\n                                        Prosentase Kemiripan: {queryStatus.similarity.toFixed(2)}\r\n                                        <br />\r\n                                        <br />\r\n                                        <h6 className=\"text-lg\">\r\n                                            {queryStatus.message}\r\n                                        </h6>\r\n                                    </span> : <h6>{queryStatus.message}</h6>}\r\n                                </ToastBody>\r\n                            </Toast>\r\n                        </div>\r\n                        {resultQuery && queryStatus.success && <div className=\"mt-4\">\r\n                            <DynamicTable data={resultQuery} name=\"Hasil Result\" />\r\n                        </div>}\r\n                    </Col>\r\n                    <Col className=\"border-left ml-3\">\r\n                        <div>\r\n                            <h6>Contoh Hasil Query:</h6>\r\n                            <img src={`${ENDPOINT_ASSETS}/${question.answer_pic}`} alt=\"hasil query\" className=\"img-fluid\" />\r\n                        </div>\r\n                        <div className=\"mt-4\">\r\n                            <h6 className=\"mb-3\">Tabel yang digunakan:</h6>\r\n                            <TableSample tables={question.tables} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SoalShow\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\ButtonSubmit.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\ButtonTest.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\TableSample.js",["383"],"import React, { useState } from 'react'\r\nimport TableSampleItem from './TableSampleItem'\r\n\r\nfunction TableSample({ tables }) {\r\n    // const [data,] = useState({\r\n    //     A: [{ \"id\": 1, \"nama\": \"Daffa\", \"kelas\": \"1A\", \"nim\": \"1741720017\" }, { \"id\": 2, \"nama\": \"Akbar\", \"kelas\": \"2B\", \"nim\": \"174172818\" }],\r\n    //     B: [{ \"id\": 1, \"nama\": \"Daffa\", \"kelas\": \"1A\" }, { \"id\": 2, \"nama\": \"Akbar\", \"kelas\": \"2B\" }]\r\n    // })\r\n\r\n    return (\r\n        Object.keys(tables).map(key => {\r\n            return <TableSampleItem key={key} table={key} data={tables[key]} />\r\n        })\r\n    )\r\n}\r\n\r\nexport default TableSample\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\TableSampleItem.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\buttonkembali\\ButtonKembali.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\buttonkembali\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\TabelSample.js",["384"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap'\r\nimport ButtonKembali from '../../../../components/buttonkembali'\r\nimport DataTable from '../../../../components/datatable';\r\nimport Spinner from '../../../../components/spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../../config';\r\n\r\nfunction TabelSample(props) {\r\n\r\n    const [loading, setloading] = useState(true)\r\n    const [caseStudy, setCaseStudy] = useState(null)\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        setloading(true)\r\n        getCaseStudy(id)\r\n            .then(() => {\r\n                setloading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getCaseStudy = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/casestudies/${id}`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    setCaseStudy(data.data)\r\n                    const tables = data.data.tables\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: Object.keys(tables).map(key => {\r\n                            return {\r\n                                name: key,\r\n                                columns: tables[key].reduce((acc, curr) => {\r\n                                    if (tables[key].indexOf(curr) === tables[key].length - 1) {\r\n                                        acc += curr + \"\"\r\n                                        return acc\r\n                                    }\r\n                                    acc += curr + \" | \"\r\n                                    return acc\r\n                                }, \"\"),\r\n                                action: <Link to={`/studikasus/${id}/data/${key}`}>\r\n                                    <Button size=\"sm\" outline>Lihat Data</Button>\r\n                                </Link>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const deleteStudyCase = (id) => {\r\n        axios.delete(`${ENDPOINT_BACKEND}/casestudies/${id}`, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(() => {\r\n                props.history.push('/studikasus')\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Nama Tabel\",\r\n                field: \"name\",\r\n                width: 200,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Nama Tabel\",\r\n                },\r\n            },\r\n            {\r\n                label: \"Kolom\",\r\n                field: \"columns\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                name: \"user\",\r\n                columns: \"id | username | password\",\r\n                action: <Link to=\"/studikasus/1/data/2\">\r\n                    <Button>Lihat Data</Button>\r\n                </Link>\r\n            },\r\n            {\r\n                name: \"category\",\r\n                columns: \"id | name\",\r\n                action: <Link to=\"/studikasus/1/data/2\">\r\n                    <Button>Lihat Data</Button>\r\n                </Link>\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            {loading ? <Spinner /> : <div>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"mb-4\">\r\n                        <h4 className=\"mb-4\">{caseStudy.name}</h4>\r\n                        <div className=\"text-muted d-flex align-items-center\">\r\n                            <h6 className=\"mr-2\"> <b>Nama Database:</b> </h6> <h6>{caseStudy.db_name}</h6>\r\n                        </div>\r\n                    </div>\r\n                    <Button outline color=\"danger\" onClick={e => deleteStudyCase(id)}>\r\n                        <FontAwesomeIcon\r\n                            icon={faTrashAlt}\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <DataTable datatable={datatable} />\r\n            </div>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TabelSample\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\mhskelas\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\kelas\\mhskelas\\MhsKelas.js",["385"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport Select from 'react-select'\r\nimport { Button, Col, Container, Form, FormGroup, Label, Row } from 'reactstrap'\r\nimport ButtonKembali from '../../../../components/buttonkembali'\r\nimport DataTable from '../../../../components/datatable'\r\nimport Spinner from '../../../../components/spinner'\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../../config'\r\n\r\nfunction MhsKelas(props) {\r\n    const { id } = useParams()\r\n    const [isFormShown, setIsFormShown] = useState(false)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [classDetail, setClassDetail] = useState(null)\r\n\r\n    const [students, setStudents] = useState([])\r\n    const [selectedStudents, setSelectedStudents] = useState([])\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setSelectedStudents(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getStudents(id)\r\n            .then(() => {\r\n                getStudentsInput(id)\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getStudents = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/classes/${id}`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    setClassDetail(data.data)\r\n                    console.log(data.data)\r\n                    setDatatable({\r\n                        ...datatable,\r\n                        rows: data.data.students.map(student => {\r\n                            return {\r\n                                name: student.name,\r\n                                nim: student.nim,\r\n                                action: <Button color=\"danger\" outline size=\"sm\" onClick={e => deleteStudent(student.id)}> <FontAwesomeIcon\r\n                                    icon={faTrashAlt}\r\n                                /></Button>\r\n                            }\r\n                        })\r\n                    })\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(false))\r\n        })\r\n    }\r\n\r\n    const getStudentsInput = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/students/classes/${id}`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    setStudents(data.data.map(val => {\r\n                        return {\r\n                            value: val.id,\r\n                            label: val.nim + \" - \" + val.name\r\n                        }\r\n                    }))\r\n                })\r\n        })\r\n    }\r\n\r\n    const deleteStudent = (studentId) => {\r\n        setLoading(true)\r\n        axios.put(`${ENDPOINT_BACKEND}/classes/${id}/remove/${studentId}`, {}, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                getStudents(id)\r\n                    .then(() => {\r\n                        getStudentsInput(id)\r\n                        setLoading(false)\r\n                    })\r\n            })\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const deleteClass = (id) => {\r\n        axios.delete(`${ENDPOINT_BACKEND}/classes/${id}`, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                props.history.push('/kelas')\r\n            })\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Nama\",\r\n                field: \"name\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"Nama\",\r\n                },\r\n            },\r\n            {\r\n                label: \"NIM\",\r\n                field: \"nim\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                name: \"Daffa\",\r\n                nim: \"1741720017\",\r\n                action: <Button color=\"danger\" outline> <FontAwesomeIcon\r\n                    icon={faTrashAlt}\r\n                /></Button>\r\n            },\r\n            {\r\n                name: \"Akbar\",\r\n                nim: \"1741720018\",\r\n                action: <Button color=\"danger\" outline> <FontAwesomeIcon\r\n                    icon={faTrashAlt}\r\n                /></Button>\r\n            },\r\n        ],\r\n    });\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            students: [...selectedStudents]\r\n        }\r\n        axios.put(`${ENDPOINT_BACKEND}/classes/${id}/add`, data, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                setLoading(true)\r\n                getStudents(id)\r\n                    .then(() => {\r\n                        getStudentsInput(id)\r\n                        setIsFormShown(false)\r\n                        setSelectedStudents([])\r\n                        setLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n\r\n            {loading ? <Spinner /> : <div>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <h5 className=\"mb-4\">{classDetail.name}</h5>\r\n                    <Button outline color=\"danger\" onClick={e => deleteClass(id)} >\r\n                        <FontAwesomeIcon\r\n                            icon={faTrashAlt}\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <div className=\"text-right mt-5\">\r\n                    <Button color=\"info\" outline onClick={e => setIsFormShown(!isFormShown)}>Tambah Mahasiswa</Button>\r\n                </div>\r\n                {isFormShown && (<div className=\"my-4\">\r\n                    <Row>\r\n                        <Col md={6}>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form onSubmit={submitForm}>\r\n                                <FormGroup>\r\n                                    <Label> NIM mahasiswa </Label>\r\n                                    <Select\r\n                                        // defaultValue={[colourOptions[2], colourOptions[3]]}\r\n                                        isMulti\r\n                                        isClearable\r\n                                        name=\"students\"\r\n                                        options={students}\r\n                                        className=\"basic-multi-select\"\r\n                                        classNamePrefix=\"select\"\r\n                                        value={students.filter(obj => selectedStudents.includes(obj.value))}\r\n                                        onChange={handleChangeSelect}\r\n                                        placeholder=\"Masukkan NIM mahasiswa\"\r\n                                    />\r\n                                </FormGroup>\r\n                                <div className=\"text-right\">\r\n                                    <Button type=\"submit\" className=\"purple-button\">Simpan</Button>\r\n                                </div>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>)}\r\n                <DataTable datatable={datatable} />\r\n            </div>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MhsKelas\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\tabledata\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\studikasus\\tabelsample\\tabledata\\TableData.js",["386"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Container } from 'reactstrap'\r\nimport ButtonKembali from '../../../../../components/buttonkembali'\r\nimport DynamicTable from '../../../../../components/dynamictable'\r\nimport Spinner from '../../../../../components/spinner'\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../../../config'\r\n\r\nfunction TableData(props) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [tableData, setTableData] = useState([{ \"id\": 1, \"nama\": \"Daffa\", \"kelas\": \"1A\", \"nim\": \"1741720017\" }, { \"id\": 2, \"nama\": \"Akbar\", \"kelas\": \"2B\", \"nim\": \"174172818\" }])\r\n\r\n    const { id, table } = useParams()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getData(id, table)\r\n            .then(() => setLoading(false))\r\n    }, [])\r\n\r\n    const getData = (id, table) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/casestudies/${id}/data/${table}`, {\r\n                headers: { ...BEARER_TOKEN }\r\n            })\r\n                .then(({ data }) => {\r\n                    console.log(data.data)\r\n                    setTableData(data.data)\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ButtonKembali history={props.history} />\r\n            <hr />\r\n            {loading ? <Spinner /> : <DynamicTable data={tableData} name={table} />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TableData\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\NilaiDetail.js",["387"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Container } from 'reactstrap'\r\nimport ButtonKembali from '../../../../components/buttonkembali'\r\nimport Spinner from '../../../../components/spinner'\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../../config'\r\nimport CollapseQuestion from './CollapseQuestion'\r\n\r\nfunction NilaiDetail(props) {\r\n    const { mhs, jadwal } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [detail, setDetail] = useState()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getDetailScores(mhs, jadwal)\r\n            .then(questions => {\r\n                console.log(questions)\r\n                setDetail({\r\n                    student: questions.student,\r\n                    schedule: questions.schedule\r\n                })\r\n                const answerDetail = questions.answer.map(question => {\r\n                    return {\r\n                        question: question.text,\r\n                        questionKey: question.answer,\r\n                        answer: question.SessionStudentAnswers.map(answer => {\r\n                            return {\r\n                                isEqual: answer.is_equal,\r\n                                text: answer.answer,\r\n                                type: answer.type\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                setData(answerDetail)\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const getDetailScores = (studentId, scheduleId) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/scores/mhs/${studentId}/jadwal/${scheduleId}`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(data.data))\r\n        })\r\n    }\r\n\r\n    const [data, setData] = useState([])\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            {\r\n                loading ? <Spinner /> : <div>\r\n                    <h5>Detail Nilai</h5>\r\n                    <hr />\r\n                    <div className=\"d-flex align-items-center mb-3\">\r\n                        <h6 className=\"mr-3\">Nama Mahasiswa: <b>{detail.student.name}</b></h6>\r\n                        <h6>Jadwal: <b>{detail.schedule.description}</b></h6>\r\n                    </div>\r\n                    <CollapseQuestion data={data} />\r\n                </div>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NilaiDetail\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\CollapseQuestion.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\nilaimhs\\nilaidetail\\CollapseQuestionItem.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\reacttable\\ReactTable.js",["388","389","390"],"import React from 'react'\r\nimport { useTable, useRowSelect } from 'react-table'\r\nimport { Table as BootstrapTable } from 'reactstrap';\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        )\r\n    }\r\n)\r\n\r\nfunction Table({ columns, data, setSelectedRows }) {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        selectedFlatRows,\r\n        state: { selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n        },\r\n        useRowSelect,\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n                // Let's make a column for selection\r\n                {\r\n                    id: 'selection',\r\n                    // The header can use the table's getToggleAllRowsSelectedProps method\r\n                    // to render a checkbox\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                    // The cell can use the individual row's getToggleRowSelectedProps method\r\n                    // to the render a checkbox\r\n                    Cell: ({ row }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    React.useEffect(() => {\r\n        setSelectedRows(selectedFlatRows);\r\n    }, [setSelectedRows, selectedFlatRows])\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <>\r\n            <BootstrapTable {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        rows.map(row => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td\r\n                                                {...cell.getCellProps()}\r\n                                            >\r\n                                                {cell.render('Cell')}\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </BootstrapTable>\r\n            {/* <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n            <pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            // selectedRowIds: selectedRowIds,\r\n                            'selected': selectedFlatRows.map(\r\n                                d => d.original\r\n                            ),\r\n                        },\r\n                        null,\r\n                        2\r\n                    )}\r\n                </code>\r\n            </pre> */}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ReactTable(props) {\r\n    const columns = React.useMemo(\r\n        () => props.columns,\r\n        []\r\n    )\r\n\r\n    const data = React.useMemo(() => props.data, [])\r\n\r\n    return (\r\n        <Table columns={columns} data={data} setSelectedRows={props.setSelectedRows} />\r\n    )\r\n}\r\n\r\nexport default ReactTable\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\components\\reacttable\\makeData.js",[],["391","392"],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\soalpaketdetailadd\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\dosen\\soalpaketdetail\\soalpaketdetailadd\\SoalPaketDetailAdd.js",["393"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Button, Col, Container, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport ButtonKembali from '../../../../components/buttonkembali';\r\nimport ReactTable from '../../../../components/reacttable/ReactTable';\r\nimport Spinner from '../../../../components/spinner';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../../config';\r\n\r\nfunction SoalPaketDetailAdd(props) {\r\n    const { id } = useParams()\r\n    const [selectedRows, setSelectedRows] = useState({});\r\n\r\n    const [caseStudies, setCaseStudies] = useState([])\r\n    const [selectedCaseStudy, setSelectedCaseStudy] = useState('DEFAULT')\r\n    const [dosen, setDosen] = useState([])\r\n    const [selectedDosen, setSelectedDosen] = useState('DEFAULT')\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getQuestions(id)\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n        getCaseStudies()\r\n            .then(data => setCaseStudies(data))\r\n        getDosen()\r\n            .then(data => setDosen(data))\r\n    }, [])\r\n\r\n    const getQuestions = (id, params = null) => {\r\n        let parameters = {}\r\n\r\n        if (params) {\r\n            if (params.dosen) {\r\n                parameters = {\r\n                    ...parameters,\r\n                    dosen: params.dosen\r\n                }\r\n            }\r\n\r\n            if (params.case_study) {\r\n                parameters = {\r\n                    ...parameters,\r\n                    case_study: params.case_study\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/questions/containers/${id}`, {\r\n                headers: { ...BEARER_TOKEN },\r\n                params: parameters\r\n            })\r\n                .then(({ data }) => {\r\n                    setQuestions(data.data.map(question => {\r\n                        return {\r\n                            id: question.id,\r\n                            text: <span dangerouslySetInnerHTML={{ __html: question.text }}></span>,\r\n                            answer: question.answer,\r\n                            study_case: question.CaseStudy.name,\r\n                            user_name: question.User.name\r\n                        }\r\n                    }))\r\n                    resolve(true)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const getCaseStudies = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/casestudies`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const getDosen = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/users`, { headers: { ...BEARER_TOKEN } })\r\n                .then(({ data }) => {\r\n                    resolve(data.data)\r\n                })\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const filterData = () => {\r\n        let params\r\n        if (selectedCaseStudy) {\r\n            params = {\r\n                ...params,\r\n                case_study: selectedCaseStudy\r\n            }\r\n        }\r\n\r\n        if (selectedDosen) {\r\n            params = {\r\n                ...params,\r\n                dosen: selectedDosen\r\n            }\r\n        }\r\n\r\n        setLoading(true)\r\n        getQuestions(id, params)\r\n            .then(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: \"ID\",\r\n            accessor: \"id\",\r\n        },\r\n        {\r\n            Header: \"Teks Soal\",\r\n            accessor: \"text\",\r\n        },\r\n        {\r\n            Header: \"Jawaban\",\r\n            accessor: \"answer\",\r\n        },\r\n        {\r\n            Header: \"Studi Kasus\",\r\n            accessor: \"study_case\",\r\n        },\r\n        {\r\n            Header: \"Dibuat Oleh\",\r\n            accessor: \"user_name\",\r\n        },\r\n    ]\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            questions: selectedRows.map(d => d.original.id)\r\n        }\r\n        axios.put(`${ENDPOINT_BACKEND}/containers/${id}/add`, data, { headers: { ...BEARER_TOKEN } })\r\n            .then(() => {\r\n                props.history.push(`/paketsoal/${id}`)\r\n            })\r\n    }\r\n\r\n\r\n    return (<Container>\r\n        <div className=\"mb-4\">\r\n            <ButtonKembali history={props.history} />\r\n        </div>\r\n        <div className=\"text-right mt-4 mb-3\">\r\n            <Button className=\"purple-button\" onClick={submitForm}>Simpan</Button>\r\n        </div>\r\n\r\n        {\r\n            loading ? <Spinner /> : <div>\r\n                <Row className=\"align-items-start\">\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"case_study\">Studi Kasus</Label>\r\n                            <Input type=\"select\" name=\"case_study\" id=\"case_study\" value={selectedCaseStudy} onChange={e => setSelectedCaseStudy(e.target.value)}>\r\n                                <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                {\r\n                                    caseStudies.map(val => <option key={val.id} value={val.id}>{val.name}</option>)\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <Button color=\"info\" outline className=\"mb-3\" onClick={filterData}>Cari</Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"dosen\">Dibuat Oleh</Label>\r\n                            <Input type=\"select\" name=\"dosen\" id=\"dosen\" value={selectedDosen} onChange={e => setSelectedDosen(e.target.value)}>\r\n                                <option value=\"DEFAULT\" disabled hidden>Pilih...</option>\r\n                                {\r\n                                    dosen.map(val => <option key={val.id} value={val.id}>{val.name}</option>)\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <ReactTable columns={columns} data={questions} setSelectedRows={setSelectedRows} />\r\n            </div>\r\n        }\r\n    </Container>)\r\n}\r\n\r\nexport default SoalPaketDetailAdd\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\config\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\lib\\capitalizeWord.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\lib\\getFormattedDate.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\spinner\\index.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\spinner\\Spinner.js",[],"F:\\skripsi-auto-assess\\frontend-web\\src\\components\\countdown\\Countdown.js",["394","395","396"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ENDPOINT_BACKEND } from '../../config'\r\n\r\nfunction Countdown({ schedule, showModal }) {\r\n    const [serverTime, setServerTime] = useState(new Date())\r\n    const [timeLeft, setTimeLeft] = useState({\r\n        hours: 99,\r\n        minutes: 99,\r\n        seconds: 99\r\n    });\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const calculateTimeLeft = (now, future) => {\r\n        let difference = +new Date(future) - +now;\r\n        let timeLeft = {};\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                hours: Math.floor((difference / (1000 * 60 * 60))),\r\n                minutes: Math.floor((difference / 1000 / 60) % 60),\r\n                seconds: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n\r\n        return timeLeft;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${ENDPOINT_BACKEND}/current_timestamps`)\r\n            .then(({ data }) => {\r\n                setServerTime(data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setTimeLeft(calculateTimeLeft(new Date(), schedule));\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    })\r\n\r\n    const timerComponents = [];\r\n    Object.keys(timeLeft).forEach((interval, index) => {\r\n        if (!timeLeft[interval]) {\r\n            return;\r\n        }\r\n        timerComponents.push(\r\n            <span key={index}>\r\n                {timeLeft[interval]}\r\n                {(index !== Object.keys(timeLeft).length - 1) ? \":\" : \"\"}\r\n            </span>\r\n        );\r\n    });\r\n\r\n    if (!timerComponents.length) {\r\n        showModal()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Time Left: <b>{timerComponents.length ? timerComponents : \"Waktu Habis\"}</b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countdown\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalsesi\\SoalSesiTest.js",["397","398","399","400","401","402","403","404","405"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Col, Container, ModalBody, ModalFooter, ModalHeader, Row, Modal, Label, Input } from \"reactstrap\";\r\nimport TabelSoal from \"./TabelSoal\";\r\nimport ButtonKembali from '../../../components/buttonkembali';\r\nimport axios from 'axios';\r\nimport { BEARER_TOKEN, ENDPOINT_BACKEND } from '../../../config';\r\nimport Countdown from '../../../components/countdown/Countdown';\r\nimport Spinner from '../../../components/spinner';\r\n\r\nfunction SoalSesiTest(props) {\r\n    const { id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [name, setName] = useState(localStorage.getItem(\"name\") || \"\")\r\n    const [questions, setQuestions] = useState(JSON.parse(localStorage.getItem(\"questions\")) || [])\r\n    const [answeredQuestions, setAnsweredQuestions] = useState(JSON.parse(localStorage.getItem(\"answeredQuestions\")) || [])\r\n\r\n    const [isFinished, setIsFinished] = useState(false)\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const showModal = () => setModal(true)\r\n\r\n    const getQuestions = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(`${ENDPOINT_BACKEND}/test`)\r\n                .then(res => resolve(res.data[0]))\r\n                .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const submitSession = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/sessions`, {\r\n            name: localStorage.getItem(\"name\")\r\n        }, {\r\n            headers: { ...BEARER_TOKEN }\r\n        })\r\n            .then(res => setIsFinished(true))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!name) {\r\n            showModal()\r\n        }\r\n        setLoading(true)\r\n\r\n        if (questions.length === 0 && answeredQuestions.length === 0) {\r\n            getQuestions()\r\n                .then(data => {\r\n                    const questionsFromAPI = (data.questions) ? data.questions : []\r\n\r\n                    setQuestions(questionsFromAPI)\r\n                    localStorage.setItem(\"questions\", JSON.stringify(questionsFromAPI))\r\n\r\n                    populateDatatable(questionsFromAPI)\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            const filteredQuestions = questions.filter(question => !answeredQuestions.includes(question.id))\r\n            console.log(filteredQuestions)\r\n            populateDatatable(filteredQuestions)\r\n            setLoading(false)\r\n        }\r\n\r\n    }, [])\r\n\r\n    const populateDatatable = (data) => {\r\n        setDatatable({\r\n            ...datatable,\r\n            rows: data.map(question => {\r\n                return {\r\n                    question: <span dangerouslySetInnerHTML={{ __html: question.text }}></span>,\r\n                    action: <Link to={{\r\n                        pathname: `/soaltest/${question.id}`,\r\n                        state: {\r\n                            session: id\r\n                        }\r\n                    }}>\r\n                        <Button className=\"purple-button\">Kerjakan</Button>\r\n                    </Link>,\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const resetTest = () => {\r\n        localStorage.removeItem(\"name\")\r\n        localStorage.removeItem(\"questions\")\r\n        localStorage.removeItem(\"answeredQuestions\")\r\n        window.location.reload()\r\n    }\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n            {\r\n                label: \"Teks Soal\",\r\n                field: \"question\",\r\n                width: 300,\r\n                attributes: {\r\n                    \"aria-controls\": \"DataTable\",\r\n                    \"aria-label\": \"question\",\r\n                },\r\n            },\r\n            {\r\n                label: \"\",\r\n                field: \"action\",\r\n                sort: \"disabled\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                question: \"Tampilkan nama matakuliah, jumlah jadwal dan ruangan dari matakuliah dengan jumlah jadwal paling sedikit\",\r\n                type: \"Latihan\",\r\n                action: <Link to=\"/soal/1\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n            {\r\n                id: 2,\r\n                question: \"Tampilkan NIM, gabungan nama depan dan nama belakang (dipisah spasi) dan jumlah jadwal dari masing-masing mahasiswa\",\r\n                action: <Link to=\"/soal/2\">\r\n                    <Button className=\"purple-button\">Kerjakan</Button>\r\n                </Link>,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            {loading ? <Spinner /> : (datatable.rows.length !== 0) ?\r\n                <TabelSoal datatable={datatable} />\r\n                : <div>\r\n                    <h4>Terima Kasih, <b>{name}</b></h4>\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                        <img className=\"img-fluid\" src=\"/thx_gif.gif\" alt=\"gif terima kasih\" />\r\n                    </div>\r\n                    <h6><b>Mau Ulangi Lagi?</b> <Button color=\"link\" onClick={e => resetTest()}>Klik Disini</Button></h6>\r\n                </div>\r\n            }\r\n\r\n            <Modal isOpen={modal} toggle={toggle} backdrop=\"static\">\r\n                <ModalBody>\r\n                    <Label for=\"name\">Nama</Label>\r\n                    <Input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"purple-button\" onClick={e => {\r\n                        if (name !== \"\") {\r\n                            localStorage.setItem(\"name\", name)\r\n                            toggle()\r\n                        }\r\n                    }}>Selesai</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default SoalSesiTest\r\n","F:\\skripsi-auto-assess\\frontend-web\\src\\pages\\mahasiswa\\soalshow\\SoalShowTest.js",["406","407","408"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Input, Row, Toast, ToastBody, ToastHeader, Button } from 'reactstrap'\r\nimport ButtonKembali from '../../../components/buttonkembali'\r\nimport TableSample from './TableSample'\r\nimport { useParams } from 'react-router'\r\nimport axios from 'axios'\r\nimport { ENDPOINT_BACKEND, ENDPOINT_ASSETS, BEARER_TOKEN } from '../../../config'\r\nimport Spinner from '../../../components/spinner'\r\nimport DynamicTable from '../../../components/dynamictable'\r\n\r\nfunction SoalShowTest(props) {\r\n    const { id } = useParams()\r\n    const { state: { session } } = props.location\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [question, setQuestion] = useState()\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [queryStatus, setQueryStatus] = useState({\r\n        similarity: -1,\r\n        success: false,\r\n        message: \"Pesan Placeholder\",\r\n    })\r\n    const [resultQuery, setResultQuery] = useState(null)\r\n\r\n    const [answer, setAnswer] = useState(\"\")\r\n\r\n    const toggleToast = () => setShowToast(!showToast);\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`${ENDPOINT_BACKEND}/questions/${id}`, { headers: { ...BEARER_TOKEN } })\r\n            .then(({ data }) => {\r\n                setQuestion(data.data)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const testAnswer = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/test/${id}`, {\r\n            answer,\r\n            name: localStorage.getItem(\"name\"),\r\n            type: \"test\"\r\n        })\r\n            .then(({ data }) => {\r\n                setShowToast(false)\r\n                setQueryStatus(data)\r\n                if (data.success) {\r\n                    setResultQuery(data.resQuery)\r\n                } else {\r\n                    setShowToast(true)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const submitAnswer = () => {\r\n        axios.post(`${ENDPOINT_BACKEND}/test/${id}`, {\r\n            answer,\r\n            name: localStorage.getItem(\"name\"),\r\n            type: \"submit\"\r\n        })\r\n            .then(({ data }) => {\r\n                const answeredLS = JSON.parse(localStorage.getItem(\"answeredQuestions\"))\r\n                const answered = (answeredLS) ? [...answeredLS, Number(id)] : [Number(id)]\r\n                localStorage.setItem(\"answeredQuestions\", JSON.stringify(answered))\r\n                props.history.push(`/test`)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <div className=\"mb-4\">\r\n                <ButtonKembali history={props.history} />\r\n            </div>\r\n            {loading ? <Spinner /> : <div>\r\n                <span dangerouslySetInnerHTML={{ __html: question.text }}></span>\r\n                <Row className=\"mt-4\">\r\n                    <Col sm=\"12\" md=\"6\">\r\n                        <Input type=\"textarea\" name=\"text\" rows=\"4\" value={answer} onChange={e => setAnswer(e.target.value)} />\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-4\">\r\n                            <Button outline onClick={testAnswer}>\r\n                                Test Query\r\n                            </Button>\r\n                            <Button className=\"purple-button\" onClick={submitAnswer}>\r\n                                Submit Query\r\n                                </Button>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <Toast isOpen={showToast} className={`mt-5 w-100`} style={{ flexBasis: \"100%\" }}>\r\n                                <ToastHeader toggle={toggleToast} className={`${(queryStatus.success) ? 'text-success' : 'text-danger'}`}>Query {(queryStatus.success) ? \"Sukses\" : \"Error\"}</ToastHeader>\r\n                                <ToastBody>\r\n                                    {(!queryStatus.success) ? <span>\r\n                                        {\r\n                                            (queryStatus.similarity.toFixed(2) == -1) ? \"\" : `Prosentase Kemiripan: ${queryStatus.similarity.toFixed(2)}`\r\n                                        }\r\n                                        <h6 className=\"text-lg\">\r\n                                            {queryStatus.message}\r\n                                        </h6>\r\n                                    </span> : <h6>{queryStatus.message}</h6>}\r\n                                </ToastBody>\r\n                            </Toast>\r\n                        </div>\r\n                        {resultQuery && queryStatus.success && <div className=\"mt-4\">\r\n                            <DynamicTable data={resultQuery} name=\"Hasil Result\" />\r\n                        </div>}\r\n                    </Col>\r\n                    <Col className=\"border-left ml-3\">\r\n                        <div>\r\n                            <h6>Contoh Hasil Query:</h6>\r\n                            <img src={`${ENDPOINT_ASSETS}/${question.answer_pic}`} alt=\"hasil query\" className=\"img-fluid\" />\r\n                        </div>\r\n                        <div className=\"mt-4\">\r\n                            <h6 className=\"mb-3\">Tabel yang digunakan:</h6>\r\n                            <TableSample tables={question.tables} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SoalShowTest\r\n",{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":4,"column":25,"nodeType":"415","messageId":"416","endLine":4,"endColumn":34},{"ruleId":"409","replacedBy":"417"},{"ruleId":"411","replacedBy":"418"},{"ruleId":"413","severity":1,"message":"419","line":4,"column":18,"nodeType":"415","messageId":"416","endLine":4,"endColumn":23},{"ruleId":"409","replacedBy":"420"},{"ruleId":"411","replacedBy":"421"},{"ruleId":"422","severity":1,"message":"423","line":38,"column":77,"nodeType":"424","messageId":"425","endLine":38,"endColumn":79},{"ruleId":"422","severity":1,"message":"423","line":44,"column":35,"nodeType":"424","messageId":"425","endLine":44,"endColumn":37},{"ruleId":"426","severity":1,"message":"427","line":36,"column":8,"nodeType":"428","endLine":36,"endColumn":10,"suggestions":"429"},{"ruleId":"426","severity":1,"message":"430","line":68,"column":8,"nodeType":"428","endLine":68,"endColumn":10,"suggestions":"431"},{"ruleId":"426","severity":1,"message":"432","line":27,"column":8,"nodeType":"428","endLine":27,"endColumn":10,"suggestions":"433"},{"ruleId":"426","severity":1,"message":"434","line":39,"column":8,"nodeType":"428","endLine":39,"endColumn":10,"suggestions":"435"},{"ruleId":"413","severity":1,"message":"436","line":6,"column":45,"nodeType":"415","messageId":"416","endLine":6,"endColumn":58},{"ruleId":"426","severity":1,"message":"437","line":24,"column":8,"nodeType":"428","endLine":24,"endColumn":10,"suggestions":"438"},{"ruleId":"426","severity":1,"message":"439","line":25,"column":8,"nodeType":"428","endLine":25,"endColumn":10,"suggestions":"440"},{"ruleId":"426","severity":1,"message":"441","line":31,"column":8,"nodeType":"428","endLine":31,"endColumn":10,"suggestions":"442"},{"ruleId":"413","severity":1,"message":"443","line":2,"column":17,"nodeType":"415","messageId":"416","endLine":2,"endColumn":27},{"ruleId":"413","severity":1,"message":"444","line":5,"column":10,"nodeType":"415","messageId":"416","endLine":5,"endColumn":21},{"ruleId":"426","severity":1,"message":"445","line":60,"column":8,"nodeType":"428","endLine":60,"endColumn":10,"suggestions":"446"},{"ruleId":"426","severity":1,"message":"447","line":23,"column":8,"nodeType":"428","endLine":23,"endColumn":10,"suggestions":"448"},{"ruleId":"426","severity":1,"message":"449","line":66,"column":8,"nodeType":"428","endLine":66,"endColumn":10,"suggestions":"450"},{"ruleId":"409","replacedBy":"451"},{"ruleId":"411","replacedBy":"452"},{"ruleId":"426","severity":1,"message":"437","line":37,"column":8,"nodeType":"428","endLine":37,"endColumn":10,"suggestions":"453"},{"ruleId":"413","severity":1,"message":"454","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":25},{"ruleId":"426","severity":1,"message":"455","line":24,"column":8,"nodeType":"428","endLine":24,"endColumn":10,"suggestions":"456"},{"ruleId":"426","severity":1,"message":"457","line":34,"column":8,"nodeType":"428","endLine":34,"endColumn":10,"suggestions":"458"},{"ruleId":"426","severity":1,"message":"459","line":20,"column":8,"nodeType":"428","endLine":20,"endColumn":10,"suggestions":"460"},{"ruleId":"426","severity":1,"message":"461","line":40,"column":8,"nodeType":"428","endLine":40,"endColumn":10,"suggestions":"462"},{"ruleId":"413","severity":1,"message":"463","line":31,"column":18,"nodeType":"415","messageId":"416","endLine":31,"endColumn":32},{"ruleId":"426","severity":1,"message":"464","line":123,"column":9,"nodeType":"428","endLine":123,"endColumn":11,"suggestions":"465"},{"ruleId":"426","severity":1,"message":"466","line":126,"column":50,"nodeType":"428","endLine":126,"endColumn":52,"suggestions":"467"},{"ruleId":"409","replacedBy":"468"},{"ruleId":"411","replacedBy":"469"},{"ruleId":"426","severity":1,"message":"437","line":32,"column":8,"nodeType":"428","endLine":32,"endColumn":10,"suggestions":"470"},{"ruleId":"413","severity":1,"message":"471","line":6,"column":12,"nodeType":"415","messageId":"416","endLine":6,"endColumn":22},{"ruleId":"413","severity":1,"message":"472","line":12,"column":12,"nodeType":"415","messageId":"416","endLine":12,"endColumn":19},{"ruleId":"413","severity":1,"message":"473","line":12,"column":21,"nodeType":"415","messageId":"416","endLine":12,"endColumn":31},{"ruleId":"413","severity":1,"message":"474","line":3,"column":18,"nodeType":"415","messageId":"416","endLine":3,"endColumn":21},{"ruleId":"413","severity":1,"message":"475","line":3,"column":58,"nodeType":"415","messageId":"416","endLine":3,"endColumn":69},{"ruleId":"413","severity":1,"message":"476","line":3,"column":71,"nodeType":"415","messageId":"416","endLine":3,"endColumn":74},{"ruleId":"413","severity":1,"message":"477","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":21},{"ruleId":"413","severity":1,"message":"478","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":17},{"ruleId":"413","severity":1,"message":"479","line":17,"column":31,"nodeType":"415","messageId":"416","endLine":17,"endColumn":51},{"ruleId":"413","severity":1,"message":"480","line":19,"column":12,"nodeType":"415","messageId":"416","endLine":19,"endColumn":22},{"ruleId":"413","severity":1,"message":"481","line":35,"column":11,"nodeType":"415","messageId":"416","endLine":35,"endColumn":24},{"ruleId":"426","severity":1,"message":"482","line":71,"column":8,"nodeType":"428","endLine":71,"endColumn":10,"suggestions":"483"},{"ruleId":"413","severity":1,"message":"484","line":13,"column":22,"nodeType":"415","messageId":"416","endLine":13,"endColumn":29},{"ruleId":"426","severity":1,"message":"437","line":37,"column":8,"nodeType":"428","endLine":37,"endColumn":10,"suggestions":"485"},{"ruleId":"422","severity":1,"message":"423","line":96,"column":80,"nodeType":"424","messageId":"425","endLine":96,"endColumn":82},"no-native-reassign",["486"],"no-negated-in-lhs",["487"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["486"],["487"],"'Route' is defined but never used.",["486"],["487"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClasses'. Either include it or remove the dependency array.","ArrayExpression",["488"],"React Hook useEffect has a missing dependency: 'getSchedules'. Either include it or remove the dependency array.",["489"],"React Hook useEffect has a missing dependency: 'getContainers'. Either include it or remove the dependency array.",["490"],"React Hook useEffect has a missing dependency: 'getSoal'. Either include it or remove the dependency array.",["491"],"'ListGroupItem' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["492"],"React Hook useEffect has a missing dependency: 'getCaseStudies'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has missing dependencies: 'getDetailContainers' and 'id'. Either include them or remove the dependency array.",["494"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has missing dependencies: 'createSession' and 'datatable'. Either include them or remove the dependency array. You can also do a functional update 'setDatatable(d => ...)' if you only need 'datatable' in the 'setDatatable' call.",["495"],"React Hook useEffect has a missing dependency: 'getScores'. Either include it or remove the dependency array.",["496"],"React Hook useEffect has missing dependencies: 'datatable', 'getQuestions', and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setDatatable(d => ...)' if you only need 'datatable' in the 'setDatatable' call.",["497"],["486"],["487"],["498"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getCaseStudy' and 'id'. Either include them or remove the dependency array.",["499"],"React Hook useEffect has missing dependencies: 'getStudents' and 'id'. Either include them or remove the dependency array.",["500"],"React Hook useEffect has missing dependencies: 'id' and 'table'. Either include them or remove the dependency array.",["501"],"React Hook useEffect has missing dependencies: 'getDetailScores', 'jadwal', and 'mhs'. Either include them or remove the dependency array.",["502"],"'selectedRowIds' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'props.columns'. Either include it or remove the dependency array.",["503"],"React Hook React.useMemo has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["504"],["486"],["487"],["505"],"'serverTime' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Col' is defined but never used.","'ModalHeader' is defined but never used.","'Row' is defined but never used.","'ButtonKembali' is defined but never used.","'Countdown' is defined but never used.","'setAnsweredQuestions' is assigned a value but never used.","'isFinished' is assigned a value but never used.","'submitSession' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'answeredQuestions', 'name', 'populateDatatable', and 'questions'. Either include them or remove the dependency array.",["506"],"'session' is assigned a value but never used.",["507"],"no-global-assign","no-unsafe-negation",{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"516","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"516","fix":"541"},{"desc":"542","fix":"543"},{"desc":"516","fix":"544"},"Update the dependencies array to be: [getClasses]",{"range":"545","text":"546"},"Update the dependencies array to be: [getSchedules]",{"range":"547","text":"548"},"Update the dependencies array to be: [getContainers]",{"range":"549","text":"550"},"Update the dependencies array to be: [getSoal]",{"range":"551","text":"552"},"Update the dependencies array to be: [id]",{"range":"553","text":"554"},"Update the dependencies array to be: [getCaseStudies]",{"range":"555","text":"556"},"Update the dependencies array to be: [getDetailContainers, id]",{"range":"557","text":"558"},"Update the dependencies array to be: [createSession, datatable]",{"range":"559","text":"560"},"Update the dependencies array to be: [getScores]",{"range":"561","text":"562"},"Update the dependencies array to be: [datatable, getQuestions, id]",{"range":"563","text":"564"},{"range":"565","text":"554"},"Update the dependencies array to be: [getCaseStudy, id]",{"range":"566","text":"567"},"Update the dependencies array to be: [getStudents, id]",{"range":"568","text":"569"},"Update the dependencies array to be: [id, table]",{"range":"570","text":"571"},"Update the dependencies array to be: [getDetailScores, jadwal, mhs]",{"range":"572","text":"573"},"Update the dependencies array to be: [props.columns]",{"range":"574","text":"575"},"Update the dependencies array to be: [props.data]",{"range":"576","text":"577"},{"range":"578","text":"554"},"Update the dependencies array to be: [answeredQuestions, name, populateDatatable, questions]",{"range":"579","text":"580"},{"range":"581","text":"554"},[1170,1172],"[getClasses]",[2296,2298],"[getSchedules]",[832,834],"[getContainers]",[1298,1300],"[getSoal]",[925,927],"[id]",[785,787],"[getCaseStudies]",[1125,1127],"[getDetailContainers, id]",[2402,2404],"[createSession, datatable]",[862,864],"[getScores]",[2588,2590],"[datatable, getQuestions, id]",[1422,1424],[896,898],"[getCaseStudy, id]",[1288,1290],"[getStudents, id]",[859,861],"[id, table]",[1569,1571],"[getDetailScores, jadwal, mhs]",[4318,4320],"[props.columns]",[4380,4382],"[props.data]",[1250,1252],[2631,2633],"[answeredQuestions, name, populateDatatable, questions]",[1426,1428]]